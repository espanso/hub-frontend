{"pageProps":{"packageRepo":{"package":{"id":"get-ip-0.1.0","name":"get-ip","author":"yogeshbatra","description":"A espanso package to get IP address","title":"Get Ip","version":"0.1.0","tags":["ip","shell","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/get-ip-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/get-ip-0.1.0-sha256.txt"},"manifest":{"author":"yogeshbatra","description":"A espanso package to get IP address","homepage":{"_tag":"Some","value":"https://github.com/yogeshbatra/espanso-get-ip-pack"},"name":"get-ip","title":"Get Ip","version":"0.1.0","tags":["ip","shell","development"]},"readme":"# espanso-get-ip-pack\nEspanso package to get public IP\n\nWorks with both Linux and Windows\nand Requires Curl Installed\n\n## Usage:\n\n:getip for linux\n\n:winip for windows\n","packageYml":[{"name":"package.yml","content":"# getip package\n\nmatches:  \n  - trigger: \":getip\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: \"curl ifconfig.me\"\n\n  - trigger: \":winip\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: \"curl ifconfig.me\"\n          shell: cmd\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"espanso-get-ip-pack\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Espanso package to get public IP\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Works with both Linux and Windows\\nand Requires Curl Installed\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \":getip for linux\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \":winip for windows\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}