{"pageProps":{"packageRepo":{"package":{"id":"expand-contractions-en-0.1.0","name":"expand-contractions-en","author":"Lewis Blackburn","description":"Expand English contractions","title":"Expand English Contractions","version":"0.1.0","tags":["english","expand","contractions","essay","writing"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/expand-contractions-en-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/expand-contractions-en-0.1.0-sha256.txt"},"manifest":{"name":"expand-contractions-en","title":"Expand English Contractions","description":"Expand English contractions","version":"0.1.0","author":"Lewis Blackburn","tags":["english","expand","contractions","essay","writing"],"homepage":{"_tag":"Some","value":"https://github.com/lewisblackburn/hub/tree/main/packages/expand-contractions-en"}},"readme":"# expand-contractions-en\n\nThis package expands English contractions, this is useful for essay writing.\n\n# Installation\n\n```\nespanso install expand-contractions-en\nespanso restart\n```\n\n# Triggers\n\n| Contractions | Full Expansions              |\n|--------------|------------------------------|\n| ain't        | am not / is not / are not     |\n| aren't       | are not                       |\n| can't        | cannot                        |\n| couldn't     | could not                     |\n| didn't       | did not                       |\n| doesn't      | does not                      |\n| don't        | do not                        |\n| hadn't       | had not                       |\n| hasn't       | has not                       |\n| haven't      | have not                      |\n| he'll        | he will / he shall            |\n| he's         | he is                         |\n| here's       | here is                       |\n| how's        | how is                        |\n| I'd          | I would / I had               |\n| I'll         | I will / I shall              |\n| I'm          | I am                          |\n| I've         | I have                        |\n| isn't        | is not                        |\n| it'll        | it will                       |\n| it's         | it is                         |\n| let's        | let us                        |\n| mightn't     | might not                     |\n| mustn't      | must not                      |\n| she'll       | she will / she shall          |\n| she's        | she is                        |\n| shouldn't    | should not                    |\n| that's       | that is                       |\n| there's      | there is                      |\n| they'd       | they would / they had         |\n| they'll      | they will / they shall        |\n| they're      | they are                      |\n| they've      | they have                     |\n| we'd         | we would / we had             |\n| we'll        | we will / we shall            |\n| we're        | we are                        |\n| we've        | we have                       |\n| weren't      | were not                      |\n| what's       | what is                       |\n| when's       | when is                       |\n| where's      | where is                      |\n| who's        | who is                        |\n| won't        | will not                      |\n| wouldn't     | would not                     |\n| you'd        | you would / you had           |\n| you'll       | you will / you shall          |\n| you're       | you are                       |\n| you've       | you have                      |","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \"ain't\"\n    replace: \"am not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"ain't\"\n    replace: \"are not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"ain't\"\n    replace: \"is not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"aren't\"\n    replace: \"are not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"can't\"\n    replace: \"cannot\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"couldn't\"\n    replace: \"could not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"didn't\"\n    replace: \"did not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"doesn't\"\n    replace: \"does not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"don't\"\n    replace: \"do not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"hadn't\"\n    replace: \"had not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"hasn't\"\n    replace: \"has not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"haven't\"\n    replace: \"have not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"he'd\"\n    replace: \"he had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"he'd\"\n    replace: \"he would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"he'll\"\n    replace: \"he shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"he'll\"\n    replace: \"he will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"he's\"\n    replace: \"he is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"here's\"\n    replace: \"here is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"how's\"\n    replace: \"how is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I'd\"\n    replace: \"I had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I'd\"\n    replace: \"I would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I'll\"\n    replace: \"I shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I'll\"\n    replace: \"I will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I'm\"\n    replace: \"I am\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"I've\"\n    replace: \"I have\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"isn't\"\n    replace: \"is not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"it'll\"\n    replace: \"it will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"it's\"\n    replace: \"it is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"let's\"\n    replace: \"let us\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"mightn't\"\n    replace: \"might not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"mustn't\"\n    replace: \"must not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"she'd\"\n    replace: \"she had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"she'd\"\n    replace: \"she would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"she'll\"\n    replace: \"she shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"she'll\"\n    replace: \"she will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"she's\"\n    replace: \"she is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"shouldn't\"\n    replace: \"should not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"should've\"\n    replace: \"should have\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"that's\"\n    replace: \"that is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"there's\"\n    replace: \"there is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they'd\"\n    replace: \"they had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they'd\"\n    replace: \"they would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they'll\"\n    replace: \"they shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they'll\"\n    replace: \"they will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they're\"\n    replace: \"they are\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"they've\"\n    replace: \"they have\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we'd\"\n    replace: \"we had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we'd\"\n    replace: \"we would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we'll\"\n    replace: \"we shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we'll\"\n    replace: \"we will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we're\"\n    replace: \"we are\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"we've\"\n    replace: \"we have\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"weren't\"\n    replace: \"were not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"what's\"\n    replace: \"what is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"when's\"\n    replace: \"when is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"where's\"\n    replace: \"where is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"who's\"\n    replace: \"who is\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"won't\"\n    replace: \"will not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"wouldn't\"\n    replace: \"would not\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"would've\"\n    replace: \"would have\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you'd\"\n    replace: \"you had\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you'd\"\n    replace: \"you would\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you'll\"\n    replace: \"you shall\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you'll\"\n    replace: \"you will\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you're\"\n    replace: \"you are\"\n    word: true\n    propagate_case: true\n\n  - trigger: \"you've\"\n    replace: \"you have\"\n    word: true\n    propagate_case: true\n"}],"license":{"_tag":"Some","value":"MIT License\n\nCopyright (c) 2024 Lewis Blackburn\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"expand-contractions-en\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package expands English contractions, this is useful for essay writing.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install expand-contractions-en\\nespanso restart\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Triggers\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Contractions\"\n          }), _jsx(_components.th, {\n            children: \"Full Expansions\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ain't\"\n          }), _jsx(_components.td, {\n            children: \"am not / is not / are not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"aren't\"\n          }), _jsx(_components.td, {\n            children: \"are not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"can't\"\n          }), _jsx(_components.td, {\n            children: \"cannot\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"couldn't\"\n          }), _jsx(_components.td, {\n            children: \"could not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"didn't\"\n          }), _jsx(_components.td, {\n            children: \"did not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"doesn't\"\n          }), _jsx(_components.td, {\n            children: \"does not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"don't\"\n          }), _jsx(_components.td, {\n            children: \"do not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"hadn't\"\n          }), _jsx(_components.td, {\n            children: \"had not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"hasn't\"\n          }), _jsx(_components.td, {\n            children: \"has not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"haven't\"\n          }), _jsx(_components.td, {\n            children: \"have not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"he'll\"\n          }), _jsx(_components.td, {\n            children: \"he will / he shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"he's\"\n          }), _jsx(_components.td, {\n            children: \"he is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"here's\"\n          }), _jsx(_components.td, {\n            children: \"here is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"how's\"\n          }), _jsx(_components.td, {\n            children: \"how is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"I'd\"\n          }), _jsx(_components.td, {\n            children: \"I would / I had\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"I'll\"\n          }), _jsx(_components.td, {\n            children: \"I will / I shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"I'm\"\n          }), _jsx(_components.td, {\n            children: \"I am\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"I've\"\n          }), _jsx(_components.td, {\n            children: \"I have\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"isn't\"\n          }), _jsx(_components.td, {\n            children: \"is not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"it'll\"\n          }), _jsx(_components.td, {\n            children: \"it will\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"it's\"\n          }), _jsx(_components.td, {\n            children: \"it is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"let's\"\n          }), _jsx(_components.td, {\n            children: \"let us\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"mightn't\"\n          }), _jsx(_components.td, {\n            children: \"might not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"mustn't\"\n          }), _jsx(_components.td, {\n            children: \"must not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"she'll\"\n          }), _jsx(_components.td, {\n            children: \"she will / she shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"she's\"\n          }), _jsx(_components.td, {\n            children: \"she is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"shouldn't\"\n          }), _jsx(_components.td, {\n            children: \"should not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"that's\"\n          }), _jsx(_components.td, {\n            children: \"that is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"there's\"\n          }), _jsx(_components.td, {\n            children: \"there is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"they'd\"\n          }), _jsx(_components.td, {\n            children: \"they would / they had\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"they'll\"\n          }), _jsx(_components.td, {\n            children: \"they will / they shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"they're\"\n          }), _jsx(_components.td, {\n            children: \"they are\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"they've\"\n          }), _jsx(_components.td, {\n            children: \"they have\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"we'd\"\n          }), _jsx(_components.td, {\n            children: \"we would / we had\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"we'll\"\n          }), _jsx(_components.td, {\n            children: \"we will / we shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"we're\"\n          }), _jsx(_components.td, {\n            children: \"we are\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"we've\"\n          }), _jsx(_components.td, {\n            children: \"we have\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"weren't\"\n          }), _jsx(_components.td, {\n            children: \"were not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"what's\"\n          }), _jsx(_components.td, {\n            children: \"what is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"when's\"\n          }), _jsx(_components.td, {\n            children: \"when is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"where's\"\n          }), _jsx(_components.td, {\n            children: \"where is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"who's\"\n          }), _jsx(_components.td, {\n            children: \"who is\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"won't\"\n          }), _jsx(_components.td, {\n            children: \"will not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"wouldn't\"\n          }), _jsx(_components.td, {\n            children: \"would not\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"you'd\"\n          }), _jsx(_components.td, {\n            children: \"you would / you had\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"you'll\"\n          }), _jsx(_components.td, {\n            children: \"you will / you shall\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"you're\"\n          }), _jsx(_components.td, {\n            children: \"you are\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"you've\"\n          }), _jsx(_components.td, {\n            children: \"you have\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}