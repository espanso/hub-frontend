{"pageProps":{"packageRepo":{"package":{"id":"caron-letters-0.1.0","name":"caron-letters","author":"Christian Kopač","description":"A package to insert caron letters","title":"Caron Letters","version":"0.1.0","tags":["caron","slovenian"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/caron-letters-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/caron-letters-0.1.0-sha256.txt"},"manifest":{"name":"caron-letters","title":"Caron Letters","description":"A package to insert caron letters","version":"0.1.0","author":"Christian Kopač","tags":["caron","slovenian"],"homepage":{"_tag":"None"}},"readme":"A package to insert caron letters.","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \"c^\"\n    replace: \"č\"\n  - trigger: \"C^\"\n    replace: \"Č\"\n  - trigger: \"s^\"\n    replace: \"š\"\n  - trigger: \"S^\"\n    replace: \"Š\"\n  - trigger: \"z^\"\n    replace: \"ž\"\n  - trigger: \"Z^\"\n    replace: \"Ž\""}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"A package to insert caron letters.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}