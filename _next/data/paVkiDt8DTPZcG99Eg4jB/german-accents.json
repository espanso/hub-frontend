{"pageProps":{"packageRepo":{"package":{"id":"german-accents-0.1.0","name":"german-accents","author":"Puvendran Pillay","description":"Include German Accents substitutions to espanso","title":"German accents","version":"0.1.0","tags":["german","languages","accents"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/german-accents-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/german-accents-0.1.0-sha256.txt"},"manifest":{"author":"Puvendran Pillay","description":"Include German Accents substitutions to espanso","name":"german-accents","title":"German accents","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/puven12/espanso-german-accents"},"tags":["german","languages","accents"]},"readme":"A simple package to conveniently type german with a non-german keyboard layout.\nIt works by replacing keywords like `a\"` with `ä`. More details below.\n\n### Installation\n\nInstall the package with:\n\n```\nespanso install german-accents\n```\n\n### Usage\n\nThis package replaces the following keywords with the associated accent while you're\ntyping:\n\n#### Lowercase Accents\n\nKeyword | Replaced\n--- | ---\n`a\"` | ä\n`o\"` | ö\n`u\"` | ü\n`s\"` | ß\n\n#### Uppercase Accents\n\nKeyword | Replaced\n--- | ---\n`A\"` | Ä\n`O\"` | Ö\n`U\"` | Ü","packageYml":[{"name":"package.yml","content":"# German Accents\n\n# Lowercase\nmatches:\n  - trigger: \"a\\\"\"\n    replace: \"ä\"\n\n  - trigger: \"o\\\"\"\n    replace: \"ö\"\n\n  - trigger: \"u\\\"\"\n    replace: \"ü\"\n\n  - trigger: \"s\\\"\"\n    replace: \"ß\"\n\n# Uppercase\n\n  - trigger: \"A\\\"\"\n    replace: \"Ä\"\n\n  - trigger: \"O\\\"\"\n    replace: \"Ö\"\n\n  - trigger: \"U\\\"\"\n    replace: \"Ü\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h3: \"h3\",\n    h4: \"h4\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"A simple package to conveniently type german with a non-german keyboard layout.\\nIt works by replacing keywords like \", _jsx(_components.code, {\n        children: \"a\\\"\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"ä\"\n      }), \". More details below.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Install the package with:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install german-accents\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package replaces the following keywords with the associated accent while you're\\ntyping:\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Lowercase Accents\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Replaced\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ä\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ö\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ü\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"s\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ß\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Uppercase Accents\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Replaced\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"A\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Ä\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"O\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Ö\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"U\\\"\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Ü\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}