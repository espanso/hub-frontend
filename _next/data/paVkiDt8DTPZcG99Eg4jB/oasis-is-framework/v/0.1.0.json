{"pageProps":{"packageRepo":{"package":{"id":"oasis-is-framework-0.1.0","name":"oasis-is-framework","author":"Rifter","description":"OASIS-IS Generative AI mega-prompt framework for \"conversations\" with Generative AI.  This is a starter prompt that gets the information you need to added to your initial prompt.","title":"OASIS-IS GenAI Mega-Prompt Framework","version":"0.1.0","tags":["GenAI","ChatGPT","AI","Prompt","Framework","claude","megaprompt"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/oasis-is-framework-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/oasis-is-framework-0.1.0-sha256.txt"},"manifest":{"name":"oasis-is-framework","title":"OASIS-IS GenAI Mega-Prompt Framework","description":"OASIS-IS Generative AI mega-prompt framework for \"conversations\" with Generative AI.  This is a starter prompt that gets the information you need to added to your initial prompt.","version":"0.1.0","author":"Rifter","tags":["GenAI","ChatGPT","AI","Prompt","Framework","claude","megaprompt"],"homepage":{"_tag":"Some","value":"https://github.com/Ryfter/oasis-is-framework/"}},"readme":"# OASIS-IS a ChatGPT (or other chatbot) prompting mega framework, by [Rifter](https://github.com/Ryfter) #\r\n\r\nThis creates a form that lets you fill out the OASIS-IS framework, helping you to get better results from using ChatGPT, Claude, and other chat interfaces.\r\n\r\n## Usage ##\r\n\r\nThere are two formats to using this framework.\r\n\r\n1. **:oasis** - ChatGPT ONLY: This is meant to be used in the URL of your browser, or elsewhere, and copied to your URL.  This creates a full URL string that opens up ChatGPT and inserts your prompt. This one also lets you choose the ChatGPT Model used as part of the URL.\r\n2. **:poasis** - This is for use in a prompt input box. It doesn't create a URL but adds the pieces of the OASIS-IS megaprompt to get you started for a conversation.  This works for any chatbot. The model is not passed automatically to this one, you choose the model manually depending on what chatbot you are using.\r\n\r\nNot all fields need filled out.  Really, only the objective needs to be filled out.  I would recommend at least filling out the setting and archetype as well.  Filling out all fields will make it a better prompt overall.  The Interpretation / Framework has a list of output frameworks I have been working on for a while.  These work well if you have a specific need.  I've been working on this list for over a year.\r\n\r\n## What is OASIS-IS? ##\r\n\r\nOASIS-IS, is the acronym to help remember the fields needed for this framework.  \r\n**O**bjective : What do you want to accomplish?\r\n**A**rchetype : Persona, identity, character, or profile.  This can be generic like a manager with 20 years workplace mediation experience, or specific like Batman, Mark Twain, or Jack Sparrow.\r\n**S**etting : Context or background information\r\n**I**llustrations : These are your examples.\r\n**S**tyle : The tone, mood, or voice.  Examples: comedic, formal, casual, business casual.\r\n**I**nterpretation : Output Framework or Structure.\r\n**S**pecification : This is the output style, format, or how the output should look like.  Examples: Table, List, Paragraph, Code Block, etc.\r\n\r\nThere are two important steps after you create your initial prompt.\r\n**E**valuate : How was the response? Give feedback to your chatbot.\r\n**B**anter : OASIS-IS, is meant to start a conversation.\r\nA really good follow-up prompt is the following:\r\n*That is not specific enough.  Please make one more attempt, and re-research this from scratch.  Please go to all new sources and re-do the above analysis.  However you can still keep the previous research in mind, but make sure to make a second pass at your research and seek out more detailed, comprehensive analytical sources.*\r\n\r\n---\r\n\r\n## About Me ##\r\n\r\nI teach IT Management classes in a Business College.  I integrate Generative AI into my classes, and one of my classes is a Generative AI focused class.  I'm always trying different things out to learn more about Generative AI and help bring it to my students.\r\n\r\nMy Website: [Atomic Ego](http://atomicego.com/) - This is a work in progress.  I try to add items to it as I go along.\r\n","packageYml":[{"name":"package.yml","content":"# yaml-language-server: https://github.com/espanso/espanso/blob/dev/schemas/match.schema.json\n\n# OASIS-IS ChatGPT framework Form.  OASIS-IS stands for : O-bjective, A-rchetype, -S-etting, I-llustrations, S-tyle, - , I-nterpretation, S-pecification.\n# After those steps you move to Evaluate - How good was the response, give your chatbot feedback, and then Banter - Continue the conversation.  \n# Paid ChatGPT users can use the current list of models available while unpaid can use the default model.\n# The frameworks spreadsheet can be found here: http://3dmkf.com/pace-oasis\n# This first one, is meant to generate a prompt.  Run :oasis from a URL in a web browser, fill out the form and submit it, then press enter.  It will pass the prompt to Chat\nglobal_vars:\n  - name: urlprompt\n    type: echo\n    params:\n      echo: \"Title: {{oasisform.title}}%0AYou will use the OASIS IS model to start a conversation.%0A1) Objective: What do you wish to accomplish?%0A2) Archetype: Persona, identity, character, or profile.  This can be generic like a manager with 20 years workplace mediation experience, or specific like Batman, Mark Twain, or Jack Sparrow.%0A3) Setting: Context or background information.%0A4) Illustrations: These are your examples. This is Optional.%0A5) Style: The tone, mood, or voice.  Examples: comedic, formal, casual, business casual.%0A6) Interpretation: Output Framework or Structure.%0A7) Specification: This is the output style, format, or how the output should look like.  Examples: Table, List, Paragraph, Code Block, etc.%0A%0A\n        Title: {{oasisform.title}} / Model: {{oasisform.model}}%0A\n        1) What I want you to accomplish: {{oasisform.objective}}%0A\n        2) Using this persona: {{oasisform.archetype}}%0A\n        3) Here is additional Context: {{oasisform.setting}}%0A\n        4) Here are Examples: {{oasisform.illustrations}}%0A\n        5) Tone/Mode/Voice: {{oasisform.style}}%0A\n        6) I want the output to follow this output framework: {{oasisform.interpretation}}%0A\n        7) Output should look like: {{oasisform.specification}}%0A\n        &model={{oasisform.model}}\"\n  - name: boxprompt\n    type: echo\n    params:\n      echo: \"Title: {{oasisform.title}}\\nYou will use the OASIS IS model to start a conversation.\\n1) Objective: What do you wish to accomplish?\\n2)Archetype: Persona, identity, character, or profile.  This can be generic like a manager with 20 years workplace mediation experience, or specific like Batman, Mark Twain, or Jack Sparrow.\\n3) Setting: Context or background information.\\n4) Illustrations: These are your examples. This is Optional.\\n5) Style: The tone, mood, or voice.  Examples: comedic, formal, casual, business casual.\\n6) Interpretation: Output Framework or Structure.\\n7) Specification: This is the output style, format, or how the output should look like.  Examples: Table, List, Paragraph, Code Block, etc.\\n\\n\n        Title: {{oasisform.title}}\\n\n        1) What I want you to accomplish: {{oasisform.objective}}\\n\n        2) Using this persona: {{oasisform.archetype}}\\n\n        3) Here is additional Context: {{oasisform.setting}}\\n\n        4) Here are Examples: {{oasisform.illustrations}}\\n\n        5) Tone/Mode/Voice: {{oasisform.style}}\\n\n        6) I want the output to follow this output framework: {{oasisform.interpretation}}\\n\n        7) Output should look like: {{oasisform.specification}}\\n\"\n  - name: formo1\n    type: echo\n    params:\n      echo: \"You will need to fill out the following 7 fields. The more you fill out the better the prompt will be.  Except for Objective, they are all optional.\\n\n        CONVERSATION TITLE: Name your Chat (This can help you find it later, it does not name it on the left)[[title]]\\n\n        1) Objective: \tWhat do you want to accomplish:\\n\n        [[objective]]\\n\n        2) Archetype: \tPersona, identity, character, or profile.  This can be generic like a manager with 20 years workplace mediation experience, or specific like Batman, Mark Twain, or Jack Sparrow:\\n\n        [[archetype]]\\n\n        3) Setting: \tContext or background information:\\n\n        [[setting]]\\n\n        4) Illustrations: \tThese are your examples:\\n\n        [[illustrations]]\\n\n        5) Style:   The tone, mood, or voice.  Examples: comedic, formal, casual, business casual:\\n\n        [[style]]\\n\n        6) Interpretation:    Output Framework or Structure: [[interpretation]]\\n\n        7) Specification:   This is the output style, format, or how the output should look like.  Examples: Table, List, Paragraph, Code Block, etc:\\n\n        [[specification]]\\n\"\n\n\nanchors:\n  - &formfields\n      title:\n      multiline: false\n      objective:\n        multiline: true\n      archetype:\n      setting:\n        multiline: true\n      illustrations:\n        multiline: true\n      style:\n      interpretation: \n        type: choice\n        default: No Framework\n        values:\n          - No Framework\n          - 4Ps (Product, Price, Place, Promotion)\n          - 5 Rights of Nursing Delegation\n          - 5 Whys\n          - 5Ws (Who, What, Where, When, Why) & 1H (How)\n          - ACE (Attention, Connection, Engagement)\n          - Agile Framework\n          - AIDA (Attention, Interest, Desire, Action)\n          - Ansoff Matrix\n          - Balanced Scorecard\n          - Blue Ocean Strategy\n          - Business Model Canvas\n          - C.A.R.L. method - Context, Action, Results, Learning\n          - Claim-Evidence-Reasoning Framework (CER)\n          - Dan Harmon's Story Circle\n          - DMAIC (Define, Measure, Analyze, Improve, Control)\n          - Eisenhower Box (Urgent-Important Matrix)\n          - Executive Summaries\n          - Fishbone Diagram (Ishikawa Diagram)\n          - Five Paragraph Order Planning and Execution\n          - Freytag's Pyramid / 5 - point Story Structure\n          - GAP Analysis\n          - HERO (Hook, Empathy, Response, Offer)\n          - Inverted Pyramid\n          - Kano Model\n          - Literary Story Format - Narrative Structure\n          - Monroe's Motivated Sequence\n          - MoSCoW Method\n          - MOST (Mission, Objectives, Strategies, Tactics)\n          - OKR (Objectives and Key Results)\n          - PAPA (Problem, Agitation, Persuasion, Action)\n          - Pareto Analysis (80/20 Rule)\n          - PASO (Problem, Agitation, Solution, Outcome)\n          - PDCA (Plan, Do, Check, Act)\n          - PEEC (Point, Evidence, Explanation, Conclusion)\n          - PESTLE Analysis (Political, Economic, Social, Technological, Legal and Environmental)\n          - Porter's Five Forces\n          - QUEST (Qualify, Understand, Educate, Stimulate, Transition)\n          - R.C.S. method - Rephrase, Clarify, and Structure\n          - RACI (Responsible, Accountable, Consulted, Informed)\n          - ROIC (Return on Invested Capital) analysis\n          - S.T.A.R. method - Situation, Task, Action, Results\n          - Save The Cat Beat Sheet\n          - Six Sigma\n          - Six Thinking Hats\n          - SLAP (Situation, Language, Action, Purpose)\n          - SMART (Specific, Measurable, Achievable, Relevant, Time-bound)\n          - SOAR Analysis\n          - SWOT Analysis\n          - The 10-20-30 Rule\n          - The 22 Rules of Storytelling According to Pixar\n          - The 8 Sequences Method\n          - The Fichtean Curve\n          - The Hero's Journey (Monomyth)\n          - The Hourglass Format\n          - The Lead-Quote-Commentary (LQC) Format\n          - The Narrative Structure in Business and Marketing\n          - The Novel Roadmap\n          - The Seven-Point Story Structure\n          - The Snowflake Method\n          - The Wall Street Journal Formula\n          - Theory of Constraints\n          - Three-Act Structure\n          - Three-Part Presentation Structure\n          - Todorov's Narrative Theory\n          - TOWS Matrix\n          - USP (Unique Selling Proposition)\n          - Value Chain Analysis\n          - Value Net Analysis\n          - Value Proposition Canvas\n          - VRIO (Value, Rarity, Imitability, and Organization) Analysis\n          - Waterfall Model\n      specification:\n      model:\n        type: choice\n        default: gpt-4o\n        values:\n          - gpt-4o\n          - gpt-4o-mini\n          - gpt-4\n\nmatches:  \n  - trigger: :oasis\n    replace: https://chatgpt.com/chat?q={{urlprompt}}\n    vars: \n      - name: \"oasisform\"\n        type: form\n        params:\n          layout: |\n            \"{{formo1}}\"\n            Model: [[model]]\n          fields: \n            *formfields\n\n  # As the form above, this is meant to create a prompt using the OASIS-IS model.  This is meant to be used in the prompt field of the Chatbot form.  Unlike the one above, this one will work for any model.\n  # poasis is short for prompt-oasis.  \n\n  - trigger: :poasis\n    replace: \"{{boxprompt}}\"\n    vars: \n      - name: \"oasisform\"\n        type: form\n        params:\n          layout: |\n            \"{{formo1}}\"\n          fields: \n            *formfields\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    br: \"br\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      children: [\"OASIS-IS a ChatGPT (or other chatbot) prompting mega framework, by \", _jsx(_components.a, {\n        href: \"https://github.com/Ryfter\",\n        children: \"Rifter\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This creates a form that lets you fill out the OASIS-IS framework, helping you to get better results from using ChatGPT, Claude, and other chat interfaces.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are two formats to using this framework.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \":oasis\"\n        }), \" - ChatGPT ONLY: This is meant to be used in the URL of your browser, or elsewhere, and copied to your URL.  This creates a full URL string that opens up ChatGPT and inserts your prompt. This one also lets you choose the ChatGPT Model used as part of the URL.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \":poasis\"\n        }), \" - This is for use in a prompt input box. It doesn't create a URL but adds the pieces of the OASIS-IS megaprompt to get you started for a conversation.  This works for any chatbot. The model is not passed automatically to this one, you choose the model manually depending on what chatbot you are using.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Not all fields need filled out.  Really, only the objective needs to be filled out.  I would recommend at least filling out the setting and archetype as well.  Filling out all fields will make it a better prompt overall.  The Interpretation / Framework has a list of output frameworks I have been working on for a while.  These work well if you have a specific need.  I've been working on this list for over a year.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What is OASIS-IS?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"OASIS-IS, is the acronym to help remember the fields needed for this framework.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.strong, {\n        children: \"O\"\n      }), \"bjective : What do you want to accomplish?\\r\\n\", _jsx(_components.strong, {\n        children: \"A\"\n      }), \"rchetype : Persona, identity, character, or profile.  This can be generic like a manager with 20 years workplace mediation experience, or specific like Batman, Mark Twain, or Jack Sparrow.\\r\\n\", _jsx(_components.strong, {\n        children: \"S\"\n      }), \"etting : Context or background information\\r\\n\", _jsx(_components.strong, {\n        children: \"I\"\n      }), \"llustrations : These are your examples.\\r\\n\", _jsx(_components.strong, {\n        children: \"S\"\n      }), \"tyle : The tone, mood, or voice.  Examples: comedic, formal, casual, business casual.\\r\\n\", _jsx(_components.strong, {\n        children: \"I\"\n      }), \"nterpretation : Output Framework or Structure.\\r\\n\", _jsx(_components.strong, {\n        children: \"S\"\n      }), \"pecification : This is the output style, format, or how the output should look like.  Examples: Table, List, Paragraph, Code Block, etc.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"There are two important steps after you create your initial prompt.\\r\\n\", _jsx(_components.strong, {\n        children: \"E\"\n      }), \"valuate : How was the response? Give feedback to your chatbot.\\r\\n\", _jsx(_components.strong, {\n        children: \"B\"\n      }), \"anter : OASIS-IS, is meant to start a conversation.\\r\\nA really good follow-up prompt is the following:\\r\\n\", _jsx(_components.em, {\n        children: \"That is not specific enough.  Please make one more attempt, and re-research this from scratch.  Please go to all new sources and re-do the above analysis.  However you can still keep the previous research in mind, but make sure to make a second pass at your research and seek out more detailed, comprehensive analytical sources.\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"About Me\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I teach IT Management classes in a Business College.  I integrate Generative AI into my classes, and one of my classes is a Generative AI focused class.  I'm always trying different things out to learn more about Generative AI and help bring it to my students.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"My Website: \", _jsx(_components.a, {\n        href: \"http://atomicego.com/\",\n        children: \"Atomic Ego\"\n      }), \" - This is a work in progress.  I try to add items to it as I go along.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}