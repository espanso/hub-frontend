{"pageProps":{"packageRepo":{"package":{"id":"kaimoji-0.1.0","name":"kaimoji","author":"Ian Pringle","description":"A package providing Kaimoji expansions","title":"Kaimoji","version":"0.1.0","tags":["fun","meme","emoji","kaimoji","ascii"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/kaimoji-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/kaimoji-0.1.0-sha256.txt"},"manifest":{"author":"Ian Pringle","description":"A package providing Kaimoji expansions","name":"kaimoji","title":"Kaimoji","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/pard68/kaimoji"},"tags":["fun","meme","emoji","kaimoji","ascii"]},"readme":"A package providing Kaimoji expansions.","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \":shrug\"\n    replace: \"¯\\_(ツ)_/¯\"\n  - trigger: \":lenny\"\n    replace: \"( ͡° ͜ʖ ͡°)\"\n  - trigger: \":fliptable\"\n    replace: \"(╯°□°）╯︵ ┻━┻\"\n  - trigger: \":disapprove\"\n    replace: \"ಠ_ಠ\"\n  - trigger: \":denko\"\n    replace: \"(´・ω・｀)\"\n  - trigger: \":owo\"\n    replace: \"ʘwʘ\"\n  - trigger: \":hello\"\n    replace: \"( ･ω･)ﾉ\"\n  - trigger: \":cry\"\n    replace: \"ಥ益ಥ\"\n  - trigger: \":mad\"\n    replace: \"(๑•̀д•́๑)\"\n  - trigger: \":awk\"\n    replace: \"( ་ ⍸ ་ )\"\n  - trigger: \":pika\"\n    replace: \"(๑◕ܫ◕๑)\"\n  - trigger: \":donger\"\n    replace: \"ヽ༼ຈل͜ຈ༽ﾉ\"\n  - trigger: \":sparkle\"\n    replace: \"✧･ﾟ: *✧･ﾟ:* 　$|$　 *:･ﾟ✧*:･ﾟ✧\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"A package providing Kaimoji expansions.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}