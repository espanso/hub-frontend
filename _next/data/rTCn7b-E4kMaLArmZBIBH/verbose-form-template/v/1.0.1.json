{"pageProps":{"packageRepo":{"package":{"id":"verbose-form-template-1.0.1","name":"verbose-form-template","author":"Omar Elmenawi, reworked by Stephen Meech","description":"Espanso shortcode to create espanso forms with the list extension","title":"A form trigger to generate form triggers!","version":"1.0.1","tags":["shortcut","template","form","yml"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/verbose-form-template-1.0.1.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/verbose-form-template-1.0.1-sha256.txt"},"manifest":{"name":"verbose-form-template","title":"A form trigger to generate form triggers!","version":"1.0.1","author":"Omar Elmenawi, reworked by Stephen Meech","description":"Espanso shortcode to create espanso forms with the list extension","tags":["shortcut","template","form","yml"],"homepage":{"_tag":"Some","value":"https://github.com/menawi/hub/tree/main/packages"}},"readme":"# Espanso Form Extension Shortcut\n\n> This package allows you to quickly create a new Espanso shortcut containing a list Form extension. Please see the example below. \n\n## Usage\n\nLet's say you want to create a new Espanso shortcut that will allow you to choose between different options such as a list of colors that you frequently use in styling. Or you have a list of co-worker logins that you need to use but can't always remember off-hand. You can use the Form extension to quickly generate a shortcut template to give you a list of options to choose from.\n\nType `:vblf` (verbose list form) in your YAML code-editor and complete the information in the popup form. Once you click `Submit` a form trigger will be pasted in its place. Further edits, such as additional options, or changing the field `type:` to `choice`, can then be inserted.\n\nPlease see [![espanso-verbose-form-template](https://img.youtube.com/vi/videoid/0.jpg)](https://www.youtube.com/watch?v=VEGv4aHV1d8)\nfor a short video demo of an earlier version.\n\n```yaml\n# Example usage\n\n  - triggers: ['csscolors--', 'csscol--']\n    replace: \"color:  {{CSS.color_name}}\"\n    vars:\n      - name: \"CSS\"\n        type: form\n        params:\n          layout: \"color_name: [[color_name]]\" \n          fields:\n            color_name:\n              type: list\n              values:\n              - red\n              - orange\n              - black\n              - white\n              - green\n              - blue\n              - purple\n              - pink\n              - yellow\n              - brown\n              - gray\n              - cyan\n              - magenta\n              - lime\n              - teal\n              - indigo\n              - violet\n              - fuchsia\n              - aqua\n              - maroon\n              - navy\n              - olive\n              - silver\n              - limegreen\n              - skyblue\n              - tan\n```\n\n## Source \n\nPlease refer to the awesome documentation for verbose syntax forms here https://espanso.org/docs/matches/forms/#controls-with-the-verbose-syntax\n","packageYml":[{"name":"package.yml","content":"# yaml-language-server: $schema=https://raw.githubusercontent.com/espanso/espanso/dev/schemas/match.schema.json\n\nmatches:\n\n# Description:\n#   - Allows you to specify:\n#     - form name\n#     - trigger\n#     - variable\n#     - replace\n#     - three starter list options\n\n  - trigger: ':vblf'\n    label: 'Espanso: Form - Verbose'\n    replace: |2-\n        - triggers: ['{{FORM.trigger}}']\n          replace: \"{{FORM.replace}} {{{{FORM.form_name}}.{{FORM.variable}}}}\"\n          vars:\n            - name: {{FORM.form_name}}\n              type: form\n              params:\n                layout: \"{{FORM.variable}}: [[{{FORM.variable}}]]\" \n                fields:\n                  {{FORM.variable}}:\n                    type: list\n                    values:\n                    - {{FORM.list_option_one}}\n                    - {{FORM.list_option_two}}\n                    - {{FORM.list_option_three}}\n    vars:\n      - name: FORM\n        type: form\n        params:\n          layout: |-\n            Trigger: [[trigger]] Replace text: [[replace]] \n            Form:\n            Name: [[form_name]] Variable: [[variable]]\n            Form list:        \n            Option one: [[list_option_one]] \n            Option two: [[list_option_two]]\n            Option three: [[list_option_three]]\n\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    img: \"img\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Espanso Form Extension Shortcut\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"This package allows you to quickly create a new Espanso shortcut containing a list Form extension. Please see the example below.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's say you want to create a new Espanso shortcut that will allow you to choose between different options such as a list of colors that you frequently use in styling. Or you have a list of co-worker logins that you need to use but can't always remember off-hand. You can use the Form extension to quickly generate a shortcut template to give you a list of options to choose from.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Type \", _jsx(_components.code, {\n        children: \":vblf\"\n      }), \" (verbose list form) in your YAML code-editor and complete the information in the popup form. Once you click \", _jsx(_components.code, {\n        children: \"Submit\"\n      }), \" a form trigger will be pasted in its place. Further edits, such as additional options, or changing the field \", _jsx(_components.code, {\n        children: \"type:\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"choice\"\n      }), \", can then be inserted.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Please see \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=VEGv4aHV1d8\",\n        children: _jsx(_components.img, {\n          src: \"https://img.youtube.com/vi/videoid/0.jpg\",\n          alt: \"espanso-verbose-form-template\"\n        })\n      }), \"\\nfor a short video demo of an earlier version.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-yaml\",\n        children: \"# Example usage\\n\\n  - triggers: ['csscolors--', 'csscol--']\\n    replace: \\\"color:  {{CSS.color_name}}\\\"\\n    vars:\\n      - name: \\\"CSS\\\"\\n        type: form\\n        params:\\n          layout: \\\"color_name: [[color_name]]\\\" \\n          fields:\\n            color_name:\\n              type: list\\n              values:\\n              - red\\n              - orange\\n              - black\\n              - white\\n              - green\\n              - blue\\n              - purple\\n              - pink\\n              - yellow\\n              - brown\\n              - gray\\n              - cyan\\n              - magenta\\n              - lime\\n              - teal\\n              - indigo\\n              - violet\\n              - fuchsia\\n              - aqua\\n              - maroon\\n              - navy\\n              - olive\\n              - silver\\n              - limegreen\\n              - skyblue\\n              - tan\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Source\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Please refer to the awesome documentation for verbose syntax forms here \", _jsx(_components.a, {\n        href: \"https://espanso.org/docs/matches/forms/#controls-with-the-verbose-syntax\",\n        children: \"https://espanso.org/docs/matches/forms/#controls-with-the-verbose-syntax\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["1.0.1"]},"__N_SSG":true}