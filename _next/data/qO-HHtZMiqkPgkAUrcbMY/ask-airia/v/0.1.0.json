{"pageProps":{"packageRepo":{"package":{"id":"ask-airia-0.1.0","name":"ask-airia","author":"Carles Ferrater","description":"An Espanso package that enables users to quickly send prompts to Airia Agents.","title":"Ask Airia Agent","version":"0.1.0","tags":["LLM","AI","artificial intelligence","prompt","Airia","agent"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/ask-airia-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/ask-airia-0.1.0-sha256.txt"},"manifest":{"name":"ask-airia","title":"Ask Airia Agent","description":"An Espanso package that enables users to quickly send prompts to Airia Agents.","version":"0.1.0","author":"Carles Ferrater","homepage":{"_tag":"Some","value":"https://github.com/carlescarles/ask-airia/edit/main/README.md"},"tags":["LLM","AI","artificial intelligence","prompt","Airia","agent"]},"readme":"# ask-airia\n\n**ask-airia** is an [Espanso](https://espanso.org/) package that enables you to interact with [Airia Agents](https://airia.com) directly from your Espanso extension.\n\n## Features\n\n- Run Airia Agents from Espanso using custom triggers.\n- Easily configure and manage multiple Airia Agents.\n\n## Requirements\n\n- **Python 3.8+** must be installed on your system.\n- **python-dotenv** is required for environment variable management.\n- **requests** is required to do HTTP requests to Airia\n\nTo install `python-dotenv`, and `requqests` run:\n```\npython3 -m pip install requests python-dotenv\n\n```\n\n## Installation\n\nTo install from espanso hub: \n\n```\nespanso install ask-airia\n\n```\n\n1. **Configure your agents:**  \n   Edit the `agent_config.json` file to add your Agent IDs and descriptions.  \n   You can add or remove agents as needed following same structure\n\n2. **Set up environment variables:**  \n   Create a `.env` file in this folder and add your Airia domain and API key. Follow the `example.env` for more details\n\n3. **Run the extension** \n    Use *\"<ai\"* to trigger this extension or modify the trigger from the `package.yml` file\n\n    ```\n    <ai\n\n    ```\n\n## Support\n\nFor more information, visit the [Espanso documentation](https://espanso.org/docs/) or [Airia](https://airia.com).\n\n---\n\n\n","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \"<ai\"\n    replace: \"{{output}}\"\n    vars:\n      - name: agent_names\n        type: script\n        params:\n          args:\n            - python3\n            - -c\n            - |\n              import os\n              import json\n              config_path = os.path.join(\"%CONFIG%/match/packages/ask-airia/agent_config.json\")\n              if not os.path.exists(config_path):\n                  raise FileNotFoundError(f\"❌ Error: Missing agent configuration file in %CONFIG%/match/packages/ask-airia/agent_config.json\")\n              with open(config_path, 'r') as f:\n                  agents = json.load(f)\n              for agent in agents:\n                  print(agent.get(\"name\"))        \n      - name: \"prompt\"\n        type: \"form\"\n        params:\n          layout: \"[[text]]\\n\\nInput\\n\\n[[choices]]\"\n          fields:\n            text:\n              multiline: true\n            choices:\n              type: choice\n              values: |\n                {{agent_names}}\n      - name: \"output\"\n        type: \"script\"\n        params:\n          args:\n            - python3\n            - \"%CONFIG%/match/packages/ask-airia/ask-airia.py\"\n            - \"{{prompt.choices}}\"\n            - \"{{prompt.text}}\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    br: \"br\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"ask-airia\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"ask-airia\"\n      }), \" is an \", _jsx(_components.a, {\n        href: \"https://espanso.org/\",\n        children: \"Espanso\"\n      }), \" package that enables you to interact with \", _jsx(_components.a, {\n        href: \"https://airia.com\",\n        children: \"Airia Agents\"\n      }), \" directly from your Espanso extension.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Run Airia Agents from Espanso using custom triggers.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Easily configure and manage multiple Airia Agents.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Requirements\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Python 3.8+\"\n        }), \" must be installed on your system.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"python-dotenv\"\n        }), \" is required for environment variable management.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"requests\"\n        }), \" is required to do HTTP requests to Airia\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To install \", _jsx(_components.code, {\n        children: \"python-dotenv\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"requqests\"\n      }), \" run:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"python3 -m pip install requests python-dotenv\\n\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To install from espanso hub:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install ask-airia\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Configure your agents:\"\n          }), _jsx(_components.br, {}), \"\\n\", \"Edit the \", _jsx(_components.code, {\n            children: \"agent_config.json\"\n          }), \" file to add your Agent IDs and descriptions.\", _jsx(_components.br, {}), \"\\n\", \"You can add or remove agents as needed following same structure\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Set up environment variables:\"\n          }), _jsx(_components.br, {}), \"\\n\", \"Create a \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file in this folder and add your Airia domain and API key. Follow the \", _jsx(_components.code, {\n            children: \"example.env\"\n          }), \" for more details\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Run the extension\"\n          }), \"\\nUse \", _jsx(_components.em, {\n            children: \"\\\"<ai\\\"\"\n          }), \" to trigger this extension or modify the trigger from the \", _jsx(_components.code, {\n            children: \"package.yml\"\n          }), \" file\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            children: \"<ai\\n\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Support\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more information, visit the \", _jsx(_components.a, {\n        href: \"https://espanso.org/docs/\",\n        children: \"Espanso documentation\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://airia.com\",\n        children: \"Airia\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.hr, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}