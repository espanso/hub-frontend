{"pageProps":{"packageRepo":{"package":{"id":"ip64-0.1.0","name":"ip64","author":"Thor Weinreich","description":"Replace :ipv4 with your external IPv4 and :ip6 with your IPv6 (Linux and MacOS)","title":"IPv4 and IPv6","version":"0.1.0","tags":["ip","shell","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/ip64-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/ip64-0.1.0-sha256.txt"},"manifest":{"author":"Thor Weinreich","description":"Replace :ipv4 with your external IPv4 and :ip6 with your IPv6 (Linux and MacOS)","name":"ip64","title":"IPv4 and IPv6","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/tweinreich/espanso-package-ip64"},"tags":["ip","shell","development"]},"readme":"# ip64\n\n- needs `curl` to be installed so it should work on Linux and MacOS\n- replace `:ip4` with your external IPv4\n- replace `:ip6` with your external IPv6\n- uses [ipfy API](https://www.ipify.org/)","packageYml":[{"name":"package.yml","content":"# ip64 package\n\nmatches:\n  - trigger: \":ip4\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: \"echo $(curl https://api.ipify.org)\"\n\n  - trigger: \":ip6\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: \"echo $(curl https://api64.ipify.org)\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    li: \"li\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"ip64\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"needs \", _jsx(_components.code, {\n          children: \"curl\"\n        }), \" to be installed so it should work on Linux and MacOS\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"replace \", _jsx(_components.code, {\n          children: \":ip4\"\n        }), \" with your external IPv4\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"replace \", _jsx(_components.code, {\n          children: \":ip6\"\n        }), \" with your external IPv6\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"uses \", _jsx(_components.a, {\n          href: \"https://www.ipify.org/\",\n          children: \"ipfy API\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}