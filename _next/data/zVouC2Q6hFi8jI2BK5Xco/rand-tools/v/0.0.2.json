{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"rand-tools-0.0.2","name":"rand-tools","author":"JettChenT","description":"A tool for generating random strings with espanso","title":"Rand-Tools","version":"0.0.2","tags":["utility"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/rand-tools-0.0.2.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/rand-tools-0.0.2-sha256.txt"},"manifest":{"author":"JettChenT","description":"A tool for generating random strings with espanso","homepage":{"_tag":"Some","value":"https://github.com/JettChenT/espanso-randtools"},"name":"rand-tools","title":"Rand-Tools","version":"0.0.2","tags":["utility"]},"readme":"# RandTools\n\nRandTools is a tool for espanso to generate random strings on the fly, which could be used in \nfilling up random usernames/ passwords, generating API keys, etc.\n\nThis tool requires `openssl` to be installed on your system.\n\n## Usage\n\n`hrand{n};` generates a random string of length n, where n is an integer, using `openssl rand -hex`.\n\n`brand{n};` generates a random string of length n, where n is an integer, using `openssl rand -base64`.\n\n## Example\n`hrand10;` -> `98a4c2179041ae37a8f5`","packageYml":[{"name":"package.yml","content":"matches:\n  - regex: \"hrand(?P<num>.*?);\"\n    replace: \"{{result}}\"\n    vars:\n      - name: result\n        type: shell\n        params:\n          cmd: \"openssl rand -hex $ESPANSO_NUM\"\n  - regex: \"brand(?P<num>.*?);\"\n    replace: \"{{result}}\"\n    vars:\n      - name: result\n        type: shell\n        params:\n          cmd: \"openssl rand -base64 $ESPANSO_NUM\""}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"RandTools\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"RandTools is a tool for espanso to generate random strings on the fly, which could be used in\\nfilling up random usernames/ passwords, generating API keys, etc.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This tool requires \", _jsx(_components.code, {\n        children: \"openssl\"\n      }), \" to be installed on your system.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"hrand{n};\"\n      }), \" generates a random string of length n, where n is an integer, using \", _jsx(_components.code, {\n        children: \"openssl rand -hex\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"brand{n};\"\n      }), \" generates a random string of length n, where n is an integer, using \", _jsx(_components.code, {\n        children: \"openssl rand -base64\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Example\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"hrand10;\"\n      }), \" -> \", _jsx(_components.code, {\n        children: \"98a4c2179041ae37a8f5\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.0.2"]},"__N_SSG":true}