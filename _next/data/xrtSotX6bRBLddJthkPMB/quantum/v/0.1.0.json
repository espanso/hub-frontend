{"pageProps":{"packageRepo":{"package":{"id":"quantum-0.1.0","name":"quantum","author":"Jordan Matelsky","description":"Frequently-used unicode for quantum notation","title":"Quantum","version":"0.1.0","tags":["math","symbols"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/quantum-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/quantum-0.1.0-sha256.txt"},"manifest":{"author":"Jordan Matelsky","description":"Frequently-used unicode for quantum notation","name":"quantum","title":"Quantum","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/j6k4m8/espanso-quantum"},"tags":["math","symbols"]},"readme":"Frequently-used unicode for quantum notation\n\n\nhttps://github.com/j6k4m8/espanso-quantum\n\n| Abbreviation | Expansion |\n|--------------|-----------|\n|<kbd>\\\\\\\\to</kbd> | → |\n|<kbd>\\\\\\\\bn</kbd> | ℕ |\n|<kbd>\\\\\\\\br</kbd> | ℝ |\n|<kbd>\\\\\\\\pi</kbd> | π |\n|<kbd>\\\\\\\\bb</kbd> | 𝔹 |\n|<kbd>\\\\\\\\cdot</kbd> | ⋅ |\n|<kbd>\\\\\\\\theta</kbd> | θ |\n|<kbd>\\\\\\\\psi</kbd> | ψ |\n|<kbd>\\\\\\\\lambda</kbd> | λ |\n|<kbd>\\\\\\\\neg</kbd> | ¬ |\n|<kbd>\\\\\\\\times</kbd> | × |\n|<kbd>\\\\\\\\pm</kbd> | ± |\n|<kbd>\\\\\\\\b1</kbd> | 𝟙 |\n|<kbd>\\\\\\\\bra</kbd> | ⟨ |\n|<kbd>\\\\\\\\ket</kbd> | ⟩ |","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \"\\\\\\\\to\"\n    replace: \"→\"\n  - trigger: \"\\\\\\\\bbN\"\n    replace: \"ℕ\"\n  - trigger: \"\\\\\\\\bbR\"\n    replace: \"ℝ\"\n  - trigger: \"\\\\\\\\pi\"\n    replace: \"π\"\n  - trigger: \"\\\\\\\\bbB\"\n    replace: \"𝔹\"\n  - trigger: \"\\\\\\\\cdot\"\n    replace: \"⋅\"\n  - trigger: \"\\\\\\\\theta\"\n    replace: \"θ\"\n  - trigger: \"\\\\\\\\psi\"\n    replace: \"ψ\"\n  - trigger: \"\\\\\\\\lambda\"\n    replace: \"λ\"\n  - trigger: \"\\\\\\\\neg\"\n    replace: \"¬\"\n  - trigger: \"\\\\\\\\times\"\n    replace: \"×\"\n  - trigger: \"\\\\\\\\pm\"\n    replace: \"±\"\n  - trigger: \"\\\\\\\\bb1\"\n    replace: \"𝟙\"\n  - trigger: \"\\\\\\\\bra\"\n    replace: \"⟨\"\n  - trigger: \"\\\\\\\\ket\"\n    replace: \"⟩\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    p: \"p\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Frequently-used unicode for quantum notation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/j6k4m8/espanso-quantum\",\n        children: \"https://github.com/j6k4m8/espanso-quantum\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Abbreviation\"\n          }), _jsx(_components.th, {\n            children: \"Expansion\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\to\"\n            })\n          }), _jsx(_components.td, {\n            children: \"→\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\bn\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ℕ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\br\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ℝ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\pi\"\n            })\n          }), _jsx(_components.td, {\n            children: \"π\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\bb\"\n            })\n          }), _jsx(_components.td, {\n            children: \"𝔹\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\cdot\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⋅\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\theta\"\n            })\n          }), _jsx(_components.td, {\n            children: \"θ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\psi\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ψ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\lambda\"\n            })\n          }), _jsx(_components.td, {\n            children: \"λ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\neg\"\n            })\n          }), _jsx(_components.td, {\n            children: \"¬\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\times\"\n            })\n          }), _jsx(_components.td, {\n            children: \"×\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\pm\"\n            })\n          }), _jsx(_components.td, {\n            children: \"±\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\b1\"\n            })\n          }), _jsx(_components.td, {\n            children: \"𝟙\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\bra\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⟨\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"\\\\\\\\\\\\\\\\ket\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⟩\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}