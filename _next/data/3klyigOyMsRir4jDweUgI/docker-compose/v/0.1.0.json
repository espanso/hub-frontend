{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"docker-compose-0.1.0","name":"docker-compose","author":"Jazys","description":"Docker compose command","title":"docker-compose","version":"0.1.0","tags":["shell","docker","alias"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/docker-compose-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/docker-compose-0.1.0-sha256.txt"},"manifest":{"author":"Jazys","description":"Docker compose command","homepage":{"_tag":"Some","value":"https://github.com/Jazys/espanso-docker-compose"},"name":"docker-compose","title":"docker-compose","version":"0.1.0","tags":["shell","docker","alias"]},"readme":"Espanso package containing docker-compose command.\n\nReally usefull for devOps.\n\nWhen you need to deploy stack and debug, you run several time the same command.\n\nWith these shortcuts command, earn time !\n\n### List of available command\n\n| Shortcut | Command\n| - | -\n| :dbuild | docker-compose build\n| :dup | docker-compose up\n| :dupd | docker-compose up -d\n| :ddown | docker-compose down\n| :dlogs | docker-compose logs\n| :dlogsf | docker-compose logs -f\n| :dexec | docker-compose exec\n| :drestart | docker-compose restart\n\n","packageYml":[{"name":"package.yml","content":"# Docker compose Package\n\nmatches:\n  - trigger: \":dbuild\"\n    replace: \"docker-compose build\"\n    \n  - trigger: \":dup\"\n    replace: \"docker-compose up\"\n\n  - trigger: \":dupd\"\n    replace: \"docker-compose up -d\"\n    \n  - trigger: \":ddown\"\n    replace: \"docker-compose down\"\n\n  - trigger: \":dlogs\"\n    replace: \"docker-compose logs\"\n    \n  - trigger: \":dlogsf\"\n    replace: \"docker-compose logs -f\"\n\n  - trigger: \":dexec\"\n    replace: \"docker-compose exec\"\n    \n  - trigger: \":drestart\"\n    replace: \"docker-compose restart\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Espanso package containing docker-compose command.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Really usefull for devOps.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When you need to deploy stack and debug, you run several time the same command.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With these shortcuts command, earn time !\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"List of available command\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Shortcut\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dbuild\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose build\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dup\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose up\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dupd\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose up -d\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":ddown\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose down\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dlogs\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose logs\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dlogsf\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose logs -f\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":dexec\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose exec\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":drestart\"\n          }), _jsx(_components.td, {\n            children: \"docker-compose restart\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}