{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"frontend-snippets-0.1.0","name":"frontend-snippets","author":"Ira Sanchez","description":"A simple package to make frontend development easier regardless of IDE.","title":"Frontend Snippets","version":"0.1.0","tags":["frontend","html","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/frontend-snippets-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/frontend-snippets-0.1.0-sha256.txt"},"manifest":{"author":"Ira Sanchez","description":"A simple package to make frontend development easier regardless of IDE.","name":"frontend-snippets","title":"Frontend Snippets","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/irasanchez/frontend-snippets"},"tags":["frontend","html","development"]},"readme":"# frontend-snippets\n\nMake frontend easier and less time-consuming with this [Espanso](https://espanso.org/) package!\n\nForked from the html-utils-package with additional matches added.\n\n# Triggers\n\n## HTML\n\n| Trigger            | Result                                                                       |\n| ------------------ | ---------------------------------------------------------------------------- |\n| `::docskel`        | Generates an empty document with `utf-8` and `viewport` headers (unindented) |\n| `::doctype`        | `<!DOCTYPE html>`                                                            |\n| `::charset`        | `<meta charset=\"\">`                                                          |\n| `::utf-8`          | `<meta charset=\"UTF-8\">`                                                     |\n| `::viewport`       | `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">`       |\n| `::meta-author`    | `<meta name=\"author\" content=\"\">`                                            |\n| `::meta-desc`      | `<meta name=\"description\" content=\"\">`                                       |\n| `::meta-keywords`  | `<meta name=\"keywords\" content=\"\">`                                          |\n| `::title`          | `<title></title>`                                                            |\n| `::div`            | `<div></div>`                                                                |\n| `::html`           | `<html></html>`                                                              |\n| `::head`           | `<head></head>`                                                              |\n| `::body`           | `<body></body>`                                                              |\n| `::a`              | `<a href=\"\"></a>`                                                            |\n| `::br`             | `<br>`                                                                       |\n| `::button`         | `<button type=\"button\"></button> `                                           |\n| `::style`          | `<style></style>`                                                            |\n| `::css`            | `<link rel=\"stylesheet\" type=\"text/css\" href=\"\">`                            |\n| `::script`         | `<script></script>`                                                          |\n| `::js`             | `<script type=\"text/javascript\" src=\"\"></script>`                            |\n| `::form`           | `<form action=\"\" method=\"\"></form>`                                          |\n| `::label`          | `<label for=\"\"></label>`                                                     |\n| `::submit`         | `<input type=\"submit\" value=\"\">`                                             |\n| `::img`            | `<img src=\"\" alt=\"\">`                                                        |\n| `::input-text`     | `<input type=\"text\" name=\"\" id=\"\">`                                          |\n| `::input-password` | `<input type=\"password\" name=\"\" id=\"\">`                                      |\n| `::input-radio`    | `<input type=\"radio\" name=\"\" id=\"\" value=\"\">`                                |\n| `::input-checkbox` | `<input type=\"checkbox\" name=\"\" id=\"\" value=\"\">`                             |\n| `::input-file`     | `<input type=\"file\" name=\"\" id=\"\">`                                          |\n\n## JavaScript\n\n| Trigger     | Result                            |\n| ----------- | --------------------------------- |\n| `::while`   | `while (){ }`                     |\n| `::forup`   | `for (let i = 0; i < __; i++){ }` |\n| `::fordown` | `for (let i = 0; i >= 0; i--){ }` |\n\n## React\n\n| Trigger   | Result                                                                                                                         |\n| --------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `::rfcep` | Generates a React functional component with default props, prop types, and default export. Does **not** autogenerate the name. |\n\n# Contributions\n\nIf you feel like there's any important tag/snippet missing, feel free to create a Pull Request or open an [Issue](https://github.com/irasanchez/frontend-snippets/issues/new).\n","packageYml":[{"name":"package.yml","content":"\nmatches:\n  # HTML\n  - trigger: \"::doctype\"\n    replace: >-\n      <!DOCTYPE html>\n\n  - trigger: \"::charset\"\n    replace: >-\n      <meta charset=\"$|$\">\n\n  - trigger: \"::utf-8\"\n    replace: >-\n      <meta charset=\"UTF-8\">\n\n  - trigger: \"::viewport\"\n    replace: >-\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  - trigger: \"::meta-author\"\n    replace: >-\n      <meta name=\"author\" content=\"$|$\">\n\n  - trigger: \"::meta-desc\"\n    replace: >-\n      <meta name=\"description\" content=\"$|$\">\n\n  - trigger: \"::meta-keywords\"\n    replace: >-\n      <meta name=\"keywords\" content=\"$|$\">\n\n  - trigger: \"::title\"\n    replace: >-\n      <title>$|$</title>\n\n  - trigger: \"::div\"\n    replace: >-\n      <div>$|$</div>\n\n  - trigger: \"::html\"\n    replace: >-\n      <html>$|$</html>\n\n  - trigger: \"::head\"\n    replace: >-\n      <head>$|$</head>\n\n  - trigger: \"::body\"\n    replace: >-\n      <body>$|$</body>\n\n  - trigger: \"::a\"\n    replace: >-\n      <a href=\"\">$|$</a>\n\n  - trigger: \"::br\"\n    replace: >-\n      <br>\n\n  - trigger: \"::button\"\n    replace: >-\n      <button type=\"button\">$|$</button>\n\n  - trigger: \"::style\"\n    replace: >-\n      <style>$|$</style>\n\n  - trigger: \"::css\"\n    replace: >-\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"$|$\">\n\n  - trigger: \"::script\"\n    replace: >-\n      <script>$|$</script>\n\n  - trigger: \"::js\"\n    replace: >-\n      <script type=\"text/javascript\" src=\"$|$\"></script>\n\n  - trigger: \"::form\"\n    replace: >-\n      <form action=\"\" method=\"\">$|$</form>\n\n  - trigger: \"::label\"\n    replace: >-\n      <label for=\"\">$|$</label>\n\n  - trigger: \"::submit\"\n    replace: >-\n      <input type=\"submit\" value=\"$|$\">\n\n  - trigger: \"::img\"\n    replace: >-\n      <img src=\"$|$\" alt=\"\" />\n\n  - trigger: \"::input-text\"\n    replace: >-\n      <input type=\"text\" name=\"\" id=\"\">\n\n  - trigger: \"::input-password\"\n    replace: >-\n      <input type=\"password\" name=\"\" id=\"\">\n\n  - trigger: \"::input-radio\"\n    replace: >-\n      <input type=\"radio\" name=\"\" id=\"\" value=\"$|$\">\n\n  - trigger: \"::input-checkbox\"\n    replace: >-\n      <input type=\"checkbox\" name=\"\" id=\"\" value=\"$|$\">\n\n  - trigger: \"::input-file\"\n    replace: >-\n      <input type=\"file\" name=\"\" id=\"\">\n\n  - trigger: \"::docskel\"\n    replace: |\n      <!DOCTYPE html>\n      <html>\n\n      <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <title>$|$</title>\n      </head>\n\n      <body>\n      </body>\n\n      </html>\n\n  # REACT\n  - trigger: \"::rfcep\"\n    replace: |\n      import React from 'react';\n      import PropTypes from 'prop-types';\n\n      const ComponentName = (props) => {\n        const {} = props;\n\n        return (\n          <div></div>\n        )\n      }\n\n      ComponentName.defaultProps = {}\n\n      ComponentName.propTypes = {}\n\n      export default ComponentName;\n\n  # JAVASCRIPT\n  - trigger: \"::while\"\n    replace: |\n      while ($|$){\n\n      }\n\n  - trigger: \"::forup\"\n    replace: |\n      for (let i = 0; i < $|$; i++){\n\n      }\n\n  - trigger: \"::fordown\"\n    replace: |\n      for (let i = $|$ ; i >= 0 ; i--){\n\n      }\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"frontend-snippets\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Make frontend easier and less time-consuming with this \", _jsx(_components.a, {\n        href: \"https://espanso.org/\",\n        children: \"Espanso\"\n      }), \" package!\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Forked from the html-utils-package with additional matches added.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Triggers\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"HTML\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Result\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::docskel\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Generates an empty document with \", _jsx(_components.code, {\n              children: \"utf-8\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"viewport\"\n            }), \" headers (unindented)\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::doctype\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<!DOCTYPE html>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::charset\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta charset=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::utf-8\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta charset=\\\"UTF-8\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::viewport\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-author\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"author\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-desc\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"description\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-keywords\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"keywords\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::title\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<title></title>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::div\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<div></div>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::html\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<html></html>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::head\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<head></head>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::body\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<body></body>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::a\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<a href=\\\"\\\"></a>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::br\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<br/>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::button\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<button type=\\\"button\\\"></button> \"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::style\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<style></style>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::css\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::script\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<script></script>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::js\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<script type=\\\"text/javascript\\\" src=\\\"\\\"></script>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::form\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<form action=\\\"\\\" method=\\\"\\\"></form>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::label\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<label for=\\\"\\\"></label>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::submit\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"submit\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::img\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<img src=\\\"\\\" alt=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-text\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-password\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"password\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-radio\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"radio\\\" name=\\\"\\\" id=\\\"\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-checkbox\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-file\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"file\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"JavaScript\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Result\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::while\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"while (){ }\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::forup\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"for (let i = 0; i < __; i++){ }\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::fordown\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"for (let i = 0; i >= 0; i--){ }\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"React\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Result\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::rfcep\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Generates a React functional component with default props, prop types, and default export. Does \", _jsx(_components.strong, {\n              children: \"not\"\n            }), \" autogenerate the name.\"]\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Contributions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you feel like there's any important tag/snippet missing, feel free to create a Pull Request or open an \", _jsx(_components.a, {\n        href: \"https://github.com/irasanchez/frontend-snippets/issues/new\",\n        children: \"Issue\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}