{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"k8s-0.1.0","name":"k8s","author":"Thorsten Müller","description":"k8s shortcodes","title":"k8s","version":"0.1.0","tags":["k8s"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/k8s-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/k8s-0.1.0-sha256.txt"},"manifest":{"author":"Thorsten Müller","description":"k8s shortcodes","name":"k8s","title":"k8s","version":"0.1.0","tags":["k8s"],"homepage":{"_tag":"None"}},"readme":"A package for k8s shortcodes\n\n\n\n## Usage\n\n| Short     | Description                                              |\n| --------- | -------------------------------------------------------- |\n| bb8s      | get cleartext of base64 encoded strings                  |\n| k8sapli   | start an alpine pod                                      |\n| k8sgetall | get all resources in current namespace                   |\n| cc8s      | get all pods with containers listed in current namespace |\n| k8snp     | get all pods running on node                             |\n| k8smf     | -o json \\| jq 'del(.metadata.managedFields)'             |\n| k8scurl   | start a curl pod                                         |\n| k8sdrain  | drain node                                               |\n\n","packageYml":[{"name":"package.yml","content":"---\nmatches:\n  - trigger: \"bb8s\"\n    replace: \"-ogo-template='{{var}}'\"\n    vars:\n      - name: var\n        type: echo\n        inject_vars: false\n        params:\n          echo: \"{{ range $k, $val := .data}}{{$k}}={{ $val | base64decode }}{{\\\"\\\\n\\\"}}{{end}}\"\n\n  - trigger: \"k8salpi\"\n    replace: \"kubectl run -i --tty --rm debug --image=alpine --restart=Never -- sh\"\n\n  - trigger: \"k8sgetall\"\n    replace: \"kubectl api-resources --verbs=list --namespaced -o name  | xargs -n 1 kubectl get --show-kind --ignore-not-found\"\n\n  - trigger: \"cc8s\"\n    replace: \"-o=custom-columns=NameSpace:.metadata.namespace,NAME:.metadata.name,CONTAINERS:.spec.containers[*].name\"\n\n  - trigger: \"k8scurl\"\n    replace: |\n     cat <<EOF |kubectl apply -f -\n     apiVersion: v1\n     kind: Pod\n     metadata:\n       name: testcurl\n     spec:\n       containers:\n       - name: curl\n         image: curlimages/curl\n         command: [ \"sleep\", \"600\" ]\n     EOF\n     kubectl exec -it testcurl -- sh\n\n  - trigger: \"k8snp\"\n    replace: \"kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=\"\n\n  - trigger: \"k8smf\"\n    replace: \"-o json | jq 'del(.metadata.managedFields)'\"\n\n  - trigger: \"k8sdrain\"\n    replace: \"kubectl drain --delete-emptydir-data --ignore-daemonsets\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"var s=Object.defineProperty,u=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var o=(a,e,n)=>e in a?s(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n,t=(a,e)=>{for(var n in e||(e={}))d.call(e,n)&&o(a,n,e[n]);if(l)for(var n of l(e))p.call(e,n)&&o(a,n,e[n]);return a},m=(a,e)=>u(a,N(e));var i=(a,e)=>{var n={};for(var r in a)d.call(a,r)&&e.indexOf(r)<0&&(n[r]=a[r]);if(a!=null&&l)for(var r of l(a))e.indexOf(r)<0&&p.call(a,r)&&(n[r]=a[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:a}=r,e=i(r,[\"components\"]);return mdx(MDXLayout,m(t(t({},layoutProps),e),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"A package for k8s shortcodes\"),mdx(\"h2\",null,\"Usage\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Short\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"bb8s\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"get cleartext of base64 encoded strings\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8sapli\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"start an alpine pod\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8sgetall\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"get all resources in current namespace\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"cc8s\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"get all pods with containers listed in current namespace\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8snp\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"get all pods running on node\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8smf\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-o json \",\"|\",\" jq 'del(.metadata.managedFields)'\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8scurl\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"start a curl pod\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"k8sdrain\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"drain node\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}