{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"cht-0.1.0","name":"cht","author":"Brady Joslin","description":"A package to get the code snippets from cht.sh.","title":"cht Package","version":"0.1.0","tags":["utility","shell","cheat-sheet","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/cht-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/cht-0.1.0-sha256.txt"},"manifest":{"author":"Brady Joslin","description":"A package to get the code snippets from cht.sh.","name":"cht","title":"cht Package","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/bradyjoslin/espanso-package-cht"},"tags":["utility","shell","cheat-sheet","development"]},"readme":"# espanso-package-cht\n\nAn espanso package for getting code snippets from [Igor Chubin's](https://github.com/chubin) console-oriented cheat sheet service [cht.sh](https://cht.sh). [Espanso](https://espanso.org/) is a free cross-platform text expander written in Rust.\n\n![usage](https://github.com/bradyjoslin/espanso-package-cht/raw/master/images/chtjs.gif)\n\nFor more information about espanso packages, read the [documentation](https://espanso.org/docs/).\n\n## Usage\n\nAvailable replacements:\n\n| replacement      | description                 |\n| ---------------- | --------------------------- |\n| `:cht/{query}/`  | Code only, no comments.     |\n| `:vcht/{query}/` | Verbose. Code and comments. |\n\n## Installation\n\n`espanso install cht`\n\n## Dependencies\n\nRequires `curl`.\n\n## Package Details\n\nRepository: [https://github.com/bradyjoslin/espanso-package-cht/](https://github.com/bradyjoslin/espanso-package-cht/)\n\nThis package has been edited by the Espanso Team to port it to the new v2 format.","packageYml":[{"name":"package.yml","content":"# cht package\n\nmatches:\n  - regex: \":cht/(?P<command>.*)/\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: 'curl \"https://cht.sh/{{command}}?QT&style=bw\"'\n\n  - regex: \":vcht/(?P<command>.*)/\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: 'curl \"https://cht.sh/{{command}}?qT&style=bw\"'\n"}],"license":{"_tag":"Some","value":"MIT License\n\nCopyright (c) 2020 Brady Joslin <brady@bradyjoslin.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    img: \"img\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"espanso-package-cht\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"An espanso package for getting code snippets from \", _jsx(_components.a, {\n        href: \"https://github.com/chubin\",\n        children: \"Igor Chubin's\"\n      }), \" console-oriented cheat sheet service \", _jsx(_components.a, {\n        href: \"https://cht.sh\",\n        children: \"cht.sh\"\n      }), \". \", _jsx(_components.a, {\n        href: \"https://espanso.org/\",\n        children: \"Espanso\"\n      }), \" is a free cross-platform text expander written in Rust.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://github.com/bradyjoslin/espanso-package-cht/raw/master/images/chtjs.gif\",\n        alt: \"usage\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more information about espanso packages, read the \", _jsx(_components.a, {\n        href: \"https://espanso.org/docs/\",\n        children: \"documentation\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Available replacements:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"replacement\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":cht/{query}/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Code only, no comments.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":vcht/{query}/\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Verbose. Code and comments.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"espanso install cht\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Dependencies\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Requires \", _jsx(_components.code, {\n        children: \"curl\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Package Details\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Repository: \", _jsx(_components.a, {\n        href: \"https://github.com/bradyjoslin/espanso-package-cht/\",\n        children: \"https://github.com/bradyjoslin/espanso-package-cht/\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package has been edited by the Espanso Team to port it to the new v2 format.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}