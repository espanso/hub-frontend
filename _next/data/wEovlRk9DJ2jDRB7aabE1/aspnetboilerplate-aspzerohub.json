{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"aspnetboilerplate-aspzerohub-0.1.0","name":"aspnetboilerplate-aspzerohub","author":"Can Mavioğlu","description":"A package to include aspnetboilerplate and asp zero shortcut code generation in espanso.","title":"Aspnetboilerplate and Asp Zero Hub","version":"0.1.0","tags":["code","aspnetboilerplate","aspzero","aspnetboilerplate-espanso","aspzerohub-espanso","aspnetboilerplate-aspzerohub-espanso"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/aspnetboilerplate-aspzerohub-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/aspnetboilerplate-aspzerohub-0.1.0-sha256.txt"},"manifest":{"author":"Can Mavioğlu","description":"A package to include aspnetboilerplate and asp zero shortcut code generation in espanso.","name":"aspnetboilerplate-aspzerohub","title":"Aspnetboilerplate and Asp Zero Hub","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/canmavi/aspboilerplate-aspzerohub"},"tags":["code","aspnetboilerplate","aspzero","aspnetboilerplate-espanso","aspzerohub-espanso","aspnetboilerplate-aspzerohub-espanso"]},"readme":"\n# AspNet Boilerplate and Asp Zero Hub\n\nA package to include AspNet Boilerplate and Asp Zero shortcut code generation in espanso.\n\n## Usage\n\n| Keyword             | Description                                                                |\n| ----------------- | ------------------------------------------------------------------ |\n| :bundle | npm run create-bundles |\n| ;;ajax | return abp ajax code  |\n| ;;ns | return abp.notify.success |\n| ;;ni | return abp.notify.info | \n| ;;nw | return abp.notify.warn | \n| ;;ne | return abp.notify.error | \n| ;;ms | return abp.message.success |\n| ;;mi | return abp.message.info | \n| ;;mw | return abp.message.warn | \n| ;;me | return abp.message.error | \n| ;;con | return abp.message.confirm | \n| ;;sbusy | return abp.ui.setBusy | \n| ;;sclear | return abp.ui.clearBusy | \n| ;;sbajax | return abp.ui.setBusy with ajax | \n| ;;bpage | return abp.ui.block | \n| ;;ubpage | return abp.ui.unblock | \n| ;;belm | return abp.ui.block with selector element | \n| ;;ubelm | return abp.ui.unblock with selector element | \n| ;;fstr | return abp.utils.formatString |\n| ;;dlog | return abp.log.debug | \n| ;;ilog | return abp.log.info | \n| ;;wlog | return abp.log.warn | \n| ;;elog | return abp.log.error | \n| ;;flog | return abp.log.fatal | \n| ;;getpassive | return disable filter soft delete using block | \n| ;;fkatr | return ForeignKey Attribute | \n| ;;autatr | return AbpAuthorize Attribute | \n| ;;anonatr | return AbpAllowAnonymous or AllowAnonymous Attribute | \n| ;;autatr | return Audited or DisableAuditing Attribute | \n| ;;usecase | return UseCase Attribute | \n| ;;remsatr | return RemoteService (IsEnabled = false) or (IsMetadataEnabled = false) Attribute | \n| ;;vatr | return DisableValidation or EnableValidation Attribute | \n| ;;uow | return UnitOfWork or parameter (IsDisabled = true) or parameter (isTransactional: false) Attribute |\n| ;;map | return AutoMapTo Attribute | \n| ;;slattr | return StringLength (MaxLength) or (MaxLength and MinLength) Attribute | \n| ;;grant | return abp.auth.isGranted or razor IsGranted if block | \n| ;;gloc | return app.localize or razor @L(\"\") or L(\"\")  | \n| ;;loc | return xml localization new record  | \n| ;;throw | return throw code UserFriendlyException or Exception | ","packageYml":[{"name":"package.yml","content":"matches:\n\n  #aspbolerplate and aspzero\n  - trigger: \":bundle\"\n    replace: \"npm run create-bundles\"\n\n  - trigger: \";;ajax\"\n    replace: \"abp.ajax({\\n\n            method: '',\\n\n            url: '',\\n\n            data: JSON.stringify()\\n\n            }).done(function(data) {\\n\\n\n            });\"\n\n  - trigger: \";;ns\"\n    replace: \"abp.notify.success('a message text', 'optional title');\"\n\n  - trigger: \";;ni\"\n    replace: \"abp.notify.info('a message text', 'optional title');\"\n\n  - trigger: \";;nw\"\n    replace: \"abp.notify.warn('a message text', 'optional title');\"\n\n  - trigger: \";;ne\"\n    replace: \"abp.notify.error('a message text', 'optional title');\"\n\n  - trigger: \";;ms\"\n    replace: \"abp.message.success('some success message', 'some optional title');\"\n\n  - trigger: \";;mi\"\n    replace: \"abp.message.info('some info message', 'some optional title');\"\n\n  - trigger: \";;mw\"\n    replace: \"abp.message.warn('some warning message', 'some optional title');\"\n\n  - trigger: \";;me\"\n    replace: \"abp.message.error('some error message', 'some optional title');\"\n\n  - trigger: \";;con\"\n    replace: \"abp.message.confirm(\\n\n                '$|$','',\\n\n                function (isConfirmed) {\\n\n                if (isConfirmed) {\\n\\n\n                  }\\n\n                }\\n\n              );\"\n\n  - trigger: \";;sbusy\"\n    replace: \"abp.ui.setBusy('#form');\"\n\n  - trigger: \";;sclear\"\n    replace: \"abp.ui.clearBusy('#form');\"\n\n  - trigger: \";;sbajax\"\n    replace: \"abp.ui.setBusy(\\n\n              $('#form'),\\n\n              {{output}}\\n\n              );\"\n    vars:\n      - name: output\n        type: match\n        params:\n          trigger: \";;ajax\"\n  \n  - trigger: \";;bpage\"\n    replace: \"abp.ui.block();\"\n\n  - trigger: \";;ubpage\"\n    replace: \"abp.ui.unblock();\"\n\n  - trigger: \";;belm\"\n    replace: \"abp.ui.block($('#$|$'));\"\n\n  - trigger: \";;ubelm\"\n    replace: \"abp.ui.unblock($('#$|$'));\"\n\n  - trigger: \";;fstr\"\n    replace: \"var str = abp.utils.formatString('Hello {0}!', 'World');\"\n\n  - trigger: \";;dlog\"\n    replace: \"abp.log.debug('$|$');\"\n\n  - trigger: \";;ilog\"\n    replace: \"abp.log.info('$|$');\"\n\n  - trigger: \";;wlog\"\n    replace: \"abp.log.warn('$|$');\"\n\n  - trigger: \";;elog\"\n    replace: \"abp.log.error('$|$');\"\n\n  - trigger: \";;flog\"\n    replace: \"abp.log.fatal('$|$');\"\n\n  - trigger: \";;getpassive\"\n    replace: \"using (_unitOfWorkManager.Current.DisableFilter(AbpDataFilters.SoftDelete))\\n\n    {$|$\\n\n    }\\n\"\n\n  - trigger: \";;fkatr\"\n    replace: \"[ForeignKey(\\\"$|$\\\")]\"\n\n  - trigger: \";;autatr\"\n    replace: \"[AbpAuthorize]\"\n\n  - trigger: \";;autatr\"\n    replace: \"[AbpAuthorize(\\\"$|$\\\")]\"\n\n  - trigger: \";;anonatr\"\n    replace: \"[AbpAllowAnonymous]\"\n\n  - trigger: \";;anonatr\"\n    replace: \"[AllowAnonymous]\"\n\n  - trigger: \";;autatr\"\n    replace: \"[Audited]\"\n\n  - trigger: \";;autatr\"\n    replace: \"[DisableAuditing]\"\n\n  - trigger: \";;usecase\"\n    replace: \"[UseCase(Description = \\\"$|$\\\")]\"\n\n  - trigger: \";;remsatr\"\n    replace: \"[RemoteService(IsEnabled = false)]\"\n\n  - trigger: \";;remsatr\"\n    replace: \"[RemoteService(IsMetadataEnabled = false)]\"\n\n  - trigger: \";;vatr\"\n    replace: \"[DisableValidation]\"\n\n  - trigger: \";;vatr\"\n    replace: \"[EnableValidation]\"\n\n  - trigger: \";;uow\"\n    replace: \"[UnitOfWork]\"\n\n  - trigger: \";;uow\"\n    replace: \"[UnitOfWork(IsDisabled = true)]\"\n\n  - trigger: \";;uow\"\n    replace: \"[UnitOfWork(isTransactional: false)]\"\n\n  - trigger: \";;map\"\n    replace: \"[AutoMapTo(typeof($|$))]\"\n\n  - trigger: \";;slattr\"\n    replace: \"[StringLength($|$)]\"\n\n  - trigger: \";;slattr\"\n    replace: \"[StringLength($|$, MinimumLength = )]\"      \n\n  - trigger: \";;grant\"\n    html: \"abp.auth.isGranted('$|$');\"\n\n  - trigger: \";;grant\"\n    replace: \"@if (IsGranted(\\\"$|$\\\"))\\n{\\n\\n}\\n\"\n\n  - trigger: \";;gloc\"\n    html: \"app.localize($|$\\\"\\\")\"\n\n  - trigger: \";;gloc\"\n    replace: \"@L(\\\"$|$\\\")\"\n\n  - trigger: \";;gloc\"\n    replace: \"L(\\\"$|$\\\")\"\n\n  - trigger: \";;loc\"\n    replace: \"<text name=\\\"$|$\\\" value=\\\"\\\" />\"\n\n  - trigger: \";;throw\"\n    replace: \"throw new UserFriendlyException(\\\"$|$\\\");\"\n\n  - trigger: \";;throw\"\n    replace: \"throw new Exception(\\\"$|$\\\");\""}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"AspNet Boilerplate and Asp Zero Hub\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A package to include AspNet Boilerplate and Asp Zero shortcut code generation in espanso.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":bundle\"\n          }), _jsx(_components.td, {\n            children: \"npm run create-bundles\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ajax\"\n          }), _jsx(_components.td, {\n            children: \"return abp ajax code\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ns\"\n          }), _jsx(_components.td, {\n            children: \"return abp.notify.success\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ni\"\n          }), _jsx(_components.td, {\n            children: \"return abp.notify.info\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;nw\"\n          }), _jsx(_components.td, {\n            children: \"return abp.notify.warn\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ne\"\n          }), _jsx(_components.td, {\n            children: \"return abp.notify.error\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ms\"\n          }), _jsx(_components.td, {\n            children: \"return abp.message.success\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;mi\"\n          }), _jsx(_components.td, {\n            children: \"return abp.message.info\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;mw\"\n          }), _jsx(_components.td, {\n            children: \"return abp.message.warn\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;me\"\n          }), _jsx(_components.td, {\n            children: \"return abp.message.error\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;con\"\n          }), _jsx(_components.td, {\n            children: \"return abp.message.confirm\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;sbusy\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.setBusy\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;sclear\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.clearBusy\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;sbajax\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.setBusy with ajax\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;bpage\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.block\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ubpage\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.unblock\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;belm\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.block with selector element\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ubelm\"\n          }), _jsx(_components.td, {\n            children: \"return abp.ui.unblock with selector element\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;fstr\"\n          }), _jsx(_components.td, {\n            children: \"return abp.utils.formatString\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;dlog\"\n          }), _jsx(_components.td, {\n            children: \"return abp.log.debug\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;ilog\"\n          }), _jsx(_components.td, {\n            children: \"return abp.log.info\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;wlog\"\n          }), _jsx(_components.td, {\n            children: \"return abp.log.warn\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;elog\"\n          }), _jsx(_components.td, {\n            children: \"return abp.log.error\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;flog\"\n          }), _jsx(_components.td, {\n            children: \"return abp.log.fatal\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;getpassive\"\n          }), _jsx(_components.td, {\n            children: \"return disable filter soft delete using block\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;fkatr\"\n          }), _jsx(_components.td, {\n            children: \"return ForeignKey Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;autatr\"\n          }), _jsx(_components.td, {\n            children: \"return AbpAuthorize Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;anonatr\"\n          }), _jsx(_components.td, {\n            children: \"return AbpAllowAnonymous or AllowAnonymous Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;autatr\"\n          }), _jsx(_components.td, {\n            children: \"return Audited or DisableAuditing Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;usecase\"\n          }), _jsx(_components.td, {\n            children: \"return UseCase Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;remsatr\"\n          }), _jsx(_components.td, {\n            children: \"return RemoteService (IsEnabled = false) or (IsMetadataEnabled = false) Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;vatr\"\n          }), _jsx(_components.td, {\n            children: \"return DisableValidation or EnableValidation Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;uow\"\n          }), _jsx(_components.td, {\n            children: \"return UnitOfWork or parameter (IsDisabled = true) or parameter (isTransactional: false) Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;map\"\n          }), _jsx(_components.td, {\n            children: \"return AutoMapTo Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;slattr\"\n          }), _jsx(_components.td, {\n            children: \"return StringLength (MaxLength) or (MaxLength and MinLength) Attribute\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;grant\"\n          }), _jsx(_components.td, {\n            children: \"return abp.auth.isGranted or razor IsGranted if block\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;gloc\"\n          }), _jsx(_components.td, {\n            children: \"return app.localize or razor @L(\\\"\\\") or L(\\\"\\\")\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;loc\"\n          }), _jsx(_components.td, {\n            children: \"return xml localization new record\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \";;throw\"\n          }), _jsx(_components.td, {\n            children: \"return throw code UserFriendlyException or Exception\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}