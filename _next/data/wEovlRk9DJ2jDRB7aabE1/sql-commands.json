{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"sql-commands-0.1.0","name":"sql-commands","author":"Albert Ribas","description":"A package that provides the most used SQL commands.","title":"SQL Commands","version":"0.1.0","tags":["SQL","database"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/sql-commands-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/sql-commands-0.1.0-sha256.txt"},"manifest":{"name":"sql-commands","title":"SQL Commands","description":"A package that provides the most used SQL commands.","version":"0.1.0","author":"Albert Ribas","tags":["SQL","database"],"homepage":{"_tag":"None"}},"readme":"# Espanso SQL Commands\nEspanso package with most used commands\n\n\n## Available matches\n| Trigger |     Replace      |\n|---------|------------------|\n| :CDB:   |  CREATE DATABASE |\n| :ADB:   |  ALTER DATABASE  |\n| :II:    |  INSERT INTO     |\n| :SF:    |  SELECT * FROM   |\n| :DF:    |  DELETE FROM     |\n| :CTB:   |  CREATE TABLE    |\n| :DTB:   |  DROP TABLE      |\n| :GB:    |  GROUP BY        |\n| :OB:    |  ORDER BY        |\n| :WH:    |  WHERE           |\n\n\n**Note**: This is the first version. More commands will be added in the future based on requests.","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \":CDB:\"\n    replace: \"CREATE DATABASE\"\n\n  - trigger: \":ADB:\"\n    replace: \"ALTER DATABASE\"\n\n  - trigger: \":II:\"\n    replace: \"INSERT INTO\"\n\n  - trigger: \":SF:\"\n    replace: \"SELECT * FROM\"\n\n  - trigger: \":DF:\"\n    replace: \"DELETE FROM\"\n \n  - trigger: \":CTB:\"\n    replace: \"CREATE TABLE\" \n\n  - trigger: \":DTB:\"\n    replace: \"DROP TABLE\"\n  \n  - trigger: \":GB:\"\n    replace: \"GROUP BY\"\n  \n  - trigger: \":OB:\"\n    replace: \"ORDER BY\"\n  \n  - trigger: \":WH:\"\n    replace: \"WHERE\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Espanso SQL Commands\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Espanso package with most used commands\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Available matches\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replace\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":CDB:\"\n          }), _jsx(_components.td, {\n            children: \"CREATE DATABASE\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":ADB:\"\n          }), _jsx(_components.td, {\n            children: \"ALTER DATABASE\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":II:\"\n          }), _jsx(_components.td, {\n            children: \"INSERT INTO\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":SF:\"\n          }), _jsx(_components.td, {\n            children: \"SELECT * FROM\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":DF:\"\n          }), _jsx(_components.td, {\n            children: \"DELETE FROM\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":CTB:\"\n          }), _jsx(_components.td, {\n            children: \"CREATE TABLE\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":DTB:\"\n          }), _jsx(_components.td, {\n            children: \"DROP TABLE\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":GB:\"\n          }), _jsx(_components.td, {\n            children: \"GROUP BY\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":OB:\"\n          }), _jsx(_components.td, {\n            children: \"ORDER BY\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \":WH:\"\n          }), _jsx(_components.td, {\n            children: \"WHERE\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Note\"\n      }), \": This is the first version. More commands will be added in the future based on requests.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}