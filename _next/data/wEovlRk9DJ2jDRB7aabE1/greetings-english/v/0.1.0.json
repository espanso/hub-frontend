{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"greetings-english-0.1.0","name":"greetings-english","author":"Katrin Leinweber","description":"A few greeting snippets","title":"Greetings in English","version":"0.1.0","tags":["greetings","english","phrases"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/greetings-english-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/greetings-english-0.1.0-sha256.txt"},"manifest":{"author":"Katrin Leinweber","description":"A few greeting snippets","homepage":{"_tag":"Some","value":"https://github.com/katrinleinweber/espanso-greetings-english"},"name":"greetings-english","title":"Greetings in English","version":"0.1.0","tags":["greetings","english","phrases"]},"readme":"# English Greetings\n\nA few greeting snippets I use in [Espanso.org](https://espanso.org/). It's the thought that counts, not the typing ;-)\n\n## Contributing\n\nMRs are welcome! For major changes, please open an issue first to discuss what you would like to change.\n\n### Development dependencies\n\nAppending the up-to-date list of triggers and espansions requires:\n\n- awk\n- Make\n- perl\n- [jq](https://stedolan.github.io/jq/)\n  & [yq](https://mikefarah.gitbook.io/yq/)\n  via `asdf install`\n\n## Other useful/noteworthy Espanso packages\n\n- [effective-markdown](https://github.com/katrinleinweber/espanso-effective-markdown)\n- [greetings-german](https://github.com/katrinleinweber/espanso-greetings-german)\n- [Shruggie](https://hub.espanso.org/packages/shruggie/)\n\n## List of included espansions\n\nTrigger | Espansion\n------- | ---------\n`,dt` | `Dear {{clipboard}} team,\\n\\n\\n`\n`,dms` | `Dear Madam or Sir,\\n\\n\\n`\n`,kr` | `Kind regards,`\n`!gw` | `and have a good week!`\n`!sw` | `and have a good start into the new week!`\n`!we` | `and have a nice weekend!`\n`!rw` | `and have a nice rest of the week!`\n`,tk` | `Thank you & kind regards,`\n`!ty` | `Thank you$\\|$!`\n`:yw` | `You're welcome $\\|$:-)`\n`&tf` | `& thanks for the feedback `\n`&tm` | `& thanks for merging `\n","packageYml":[{"name":"package.yml","content":"# https://github.com/katrinleinweber/espanso-greetings-english\n\nmatches:\n\n  - trigger: \",dt\"\n    replace: \"Dear {{clipboard}} team,\\n\\n\\n\"\n    vars:\n      - name: \"clipboard\"\n        type: \"clipboard\"\n\n  - trigger: \",dms\"\n    replace: \"Dear Madam or Sir,\\n\\n\\n\"\n\n  - trigger: \",kr\"\n    replace: \"Kind regards,\"\n\n  - trigger: \"!gw\"\n    replace: \"and have a good week!\"\n\n  - trigger: \"!sw\"\n    replace: \"and have a good start into the new week!\"\n\n  - trigger: \"!we\"\n    replace: \"and have a nice weekend!\"\n\n  - trigger: \"!rw\"\n    replace: \"and have a nice rest of the week!\"\n\n  - trigger: \",tk\"\n    replace: \"Thank you & kind regards,\"\n\n  - trigger: \"!ty\"\n    replace: \"Thank you$|$!\"\n\n  - trigger: \":yw\"\n    replace: \"You're welcome $|$:-)\"\n\n  - trigger: \"&tf\"\n    replace: \"& thanks for the feedback \"\n\n  - trigger: \"&tm\"\n    replace: \"& thanks for merging \"\n\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"English Greetings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A few greeting snippets I use in \", _jsx(_components.a, {\n        href: \"https://espanso.org/\",\n        children: \"Espanso.org\"\n      }), \". It's the thought that counts, not the typing ;-)\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Contributing\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MRs are welcome! For major changes, please open an issue first to discuss what you would like to change.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Development dependencies\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Appending the up-to-date list of triggers and espansions requires:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"awk\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Make\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"perl\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://stedolan.github.io/jq/\",\n          children: \"jq\"\n        }), \"\\n& \", _jsx(_components.a, {\n          href: \"https://mikefarah.gitbook.io/yq/\",\n          children: \"yq\"\n        }), \"\\nvia \", _jsx(_components.code, {\n          children: \"asdf install\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Other useful/noteworthy Espanso packages\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/katrinleinweber/espanso-effective-markdown\",\n          children: \"effective-markdown\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/katrinleinweber/espanso-greetings-german\",\n          children: \"greetings-german\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://hub.espanso.org/packages/shruggie/\",\n          children: \"Shruggie\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"List of included espansions\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Espansion\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \",dt\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Dear {{clipboard}} team,\\\\n\\\\n\\\\n\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \",dms\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Dear Madam or Sir,\\\\n\\\\n\\\\n\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \",kr\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Kind regards,\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"!gw\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"and have a good week!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"!sw\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"and have a good start into the new week!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"!we\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"and have a nice weekend!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"!rw\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"and have a nice rest of the week!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \",tk\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Thank you & kind regards,\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"!ty\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Thank you$|$!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":yw\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"You're welcome $|$:-)\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"&tf\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"& thanks for the feedback \"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"&tm\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"& thanks for merging \"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}