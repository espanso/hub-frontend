{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"math-0.1.0","name":"math","author":"Dian M Fay","description":"Mathematical symbols such as for Boolean and set operations","title":"Math","version":"0.1.0","tags":["math","symbols"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/math-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/math-0.1.0-sha256.txt"},"manifest":{"author":"Dian M Fay","description":"Mathematical symbols such as for Boolean and set operations","name":"math","title":"Math","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/dmfay/espanso-math"},"tags":["math","symbols"]},"readme":"A package for [espanso](https://espanso.org/) containing some mathematical symbols such as for Boolean and set operations which aren't always readily available otherwise.","packageYml":[{"name":"package.yml","content":"# Math\n\nmatches:\n  # Booleans\n  - trigger: \":and\"\n    replace: \"∧\"\n  - trigger: \":or\"\n    replace: \"∨\"\n  - trigger: \":xor\"\n    replace: \"⩛\"\n  # Propositions\n  - trigger: \":not\"\n    replace: \"¬\"\n  - trigger: \":impl\"\n    replace: \"⇒\"\n  - trigger: \":equiv\"\n    replace: \"⇔\"\n  # Sets\n  - trigger: \":forall\"\n    replace: \"∀\"\n  - trigger: \":exist\"\n    replace: \"∃\"\n  - trigger: \":inset\"\n    replace: \"∈\"\n  - trigger: \":notin\"\n    replace: \"∉\"\n  - trigger: \":niset\"\n    replace: \"∋\"\n  - trigger: \":notni\"\n    replace: \"∌\"\n  - trigger: \":subset\"\n    replace: \"⊂\"\n  - trigger: \":subseq\"\n    replace: \"⊆\"\n  - trigger: \":supset\"\n    replace: \"⊃\"\n  - trigger: \":supseq\"\n    replace: \"⊇\"\n  - trigger: \":union\"\n    replace: \"∪\"\n  - trigger: \":intersect\"\n    replace: \"∩\"\n  # Proofs\n  - trigger: \":therefore\"\n    replace: \"∴\"\n  - trigger: \":because\"\n    replace: \"∵\"\n  - trigger: \":qed\"\n    replace: \"■\"\n  # Misc\n  - trigger: \":cong\"\n    replace: \"≅\"\n  - trigger: \":sqrt\"\n    replace: \"√\"\n  - trigger: \":approx\"\n    replace: \"≈\"\n  - trigger: \":sum\"\n    replace: \"∑\"\n  - trigger: \":integral\"\n    replace: \"∫\"\n  - trigger: \":dagger\"\n    replace: \"†\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"A package for \", _jsx(_components.a, {\n      href: \"https://espanso.org/\",\n      children: \"espanso\"\n    }), \" containing some mathematical symbols such as for Boolean and set operations which aren't always readily available otherwise.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}