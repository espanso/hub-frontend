{"pageProps":{"packageRepo":{"package":{"id":"ip-0.1.0","name":"ip","author":"Aurelien Bras","description":"Display your public IP with :ip ( Linux only )","title":"Public IP","version":"0.1.0","tags":["ip","shell","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/ip-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/ip-0.1.0-sha256.txt"},"manifest":{"author":"Aurelien Bras","description":"Display your public IP with :ip ( Linux only )","name":"ip","title":"Public IP","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/profy12/espanso-package-ip"},"tags":["ip","shell","development"]},"readme":"A simple package to detect and insert your public ip, need dig to work.\n\nThis package has been **tested only on Linux**.","packageYml":[{"name":"package.yml","content":"# ip package\n\nmatches:\n  - trigger: \":ip\"\n    replace: \"{{output}}\"\n    vars:\n      - name: output\n        type: shell\n        params:\n          cmd: \"echo -n $(dig @resolver1.opendns.com ANY myip.opendns.com +short)\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"A simple package to detect and insert your public ip, need dig to work.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This package has been \", _jsx(_components.strong, {\n        children: \"tested only on Linux\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}