{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"qazaq-typer-0.1.0","name":"qazaq-typer","author":"Ivan Bue","description":"Faster method to type Qazaq on latin and Cirilic. AA -> Ә ","title":"QazaqTyper","version":"0.1.0","tags":["qazaq","languages"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/qazaq-typer-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/qazaq-typer-0.1.0-sha256.txt"},"manifest":{"author":"Ivan Bue","description":"Faster method to type Qazaq on latin and Cirilic. AA -> Ә ","name":"qazaq-typer","title":"QazaqTyper","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/soulllink/Qazaq-Typer"},"tags":["qazaq","languages"]},"readme":"Double tap for the win.\nQazaq latin ver: official from 28 jan 2021.\n\n[wiki](https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%B7%D0%B0%D1%85%D1%81%D0%BA%D0%B0%D1%8F_%D0%BF%D0%B8%D1%81%D1%8C%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C)\n\n| Cirillic \t| Latin \t|\n|-\t|-\t|\n| AA -> Ә \t| AA -> Ä \t|\n| Г -> Ғ \t| GG -> Ğ \t|\n| К -> Қ \t|  \t|\n| Н -> Ң \t| NN -> Ŋ \t|\n| О -> Ө \t| OO -> Ö \t|\n| УУ -> Ұ \t| UU -> Ū \t|\n| ХХ -> Һ \t|  \t|\n| ЮЮ -> Ү \t| YY -> Ü \t|\n| ИИ -> І \t| II -> I(spec) \t|\n|  \t| SS -> Ş \t|","packageYml":[{"name":"package.yml","content":"# Qazaq Typer For Espanso\n# Made by Ivan Bue 2021\n# Faster way to use Qazaq-unique-characters than default layout\n\nmatches:\n\n- trigger: \"AA\"\n  replace: \"Ä\"\n\n- trigger: \"GG\"\n  replace: \"Ğ\"\n\n- trigger: \"II\"\n  replace: \"I\"\n\n- trigger: \"NN\"\n  replace: \"Ŋ\"\n\n- trigger: \"OO\"\n  replace: \"Ö\"\n\n- trigger: \"SS\"\n  replace: \"Ş\"\n\n- trigger: \"UU\"\n  replace: \"Ū\"\n\n- trigger: \"YY\"\n  replace: \"Ü\"\n\n- trigger: \"aa\"\n  replace: \"ä\"\n\n- trigger: \"gg\"\n  replace: \"ğ\"\n\n- trigger: \"ii\"\n  replace: \"ı\"\n\n- trigger: \"nn\"\n  replace: \"ŋ\"\n\n- trigger: \"oo\"\n  replace: \"ö\"\n\n- trigger: \"ss\"\n  replace: \"ş\"\n\n- trigger: \"uu\"\n  replace: \"ū\"\n\n- trigger: \"yy\"\n  replace: \"ü\"\n\n- trigger: \"АА\"\n  replace: \"Ә\"\n\n- trigger: \"ГГ\"\n  replace: \"Ғ\"\n\n- trigger: \"КК\"\n  replace: \"Қ\"\n\n- trigger: \"НН\"\n  replace: \"Ң\"\n\n- trigger: \"ОО\"\n  replace: \"Ө\"\n\n- trigger: \"УУ\"\n  replace: \"Ұ\"\n\n- trigger: \"ЮЮ\"\n  replace: \"Ү\"\n\n- trigger: \"ХХ\"\n  replace: \"Һ\"\n\n- trigger: \"ИИ\"\n  replace: \"І\"\n\n- trigger: \"аа\"\n  replace: \"ә\"\n\n- trigger: \"гг\"\n  replace: \"ғ\"\n\n- trigger: \"кк\"\n  replace: \"қ\"\n\n- trigger: \"нн\"\n  replace: \"ң\"\n\n- trigger: \"оо\"\n  replace: \"ө\"\n\n- trigger: \"уу\"\n  replace: \"ұ\"\n\n- trigger: \"юю\"\n  replace: \"ү\"\n\n- trigger: \"хх\"\n  replace: \"һ\"\n\n- trigger: \"ии\"\n  replace: \"і\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Double tap for the win.\\nQazaq latin ver: official from 28 jan 2021.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://ru.wikipedia.org/wiki/%D0%9A%D0%B0%D0%B7%D0%B0%D1%85%D1%81%D0%BA%D0%B0%D1%8F_%D0%BF%D0%B8%D1%81%D1%8C%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C\",\n        children: \"wiki\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Cirillic\"\n          }), _jsx(_components.th, {\n            children: \"Latin\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"AA -> Ә\"\n          }), _jsx(_components.td, {\n            children: \"AA -> Ä\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Г -> Ғ\"\n          }), _jsx(_components.td, {\n            children: \"GG -> Ğ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"К -> Қ\"\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Н -> Ң\"\n          }), _jsx(_components.td, {\n            children: \"NN -> Ŋ\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"О -> Ө\"\n          }), _jsx(_components.td, {\n            children: \"OO -> Ö\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"УУ -> Ұ\"\n          }), _jsx(_components.td, {\n            children: \"UU -> Ū\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ХХ -> Һ\"\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ЮЮ -> Ү\"\n          }), _jsx(_components.td, {\n            children: \"YY -> Ü\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ИИ -> І\"\n          }), _jsx(_components.td, {\n            children: \"II -> I(spec)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {}), _jsx(_components.td, {\n            children: \"SS -> Ş\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}