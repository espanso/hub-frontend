{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"mac-symbols-0.1.1","name":"mac-symbols","author":"Lifesign","description":"Display common Mac symbols like ⌘ and ⌥","title":"Mac Symbols","version":"0.1.1","tags":["symbols","mac"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/mac-symbols-0.1.1.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/mac-symbols-0.1.1-sha256.txt"},"manifest":{"author":"Lifesign","description":"Display common Mac symbols like ⌘ and ⌥","name":"mac-symbols","title":"Mac Symbols","version":"0.1.1","homepage":{"_tag":"Some","value":"https://github.com/lifesign/espanso-mac-symbols"},"tags":["symbols","mac"]},"readme":"A simple package to display common Mac symbols like ⌘ and ⌥, More details below\n\n### Installation\n\nInstall the package with:\n\n```\nespanso install mac-symbols\n```\n\n### Usage\nThis package replaces the following keywords with the associated mac symbols while you’re typing:\n\n| Keyword | Replaced |\n| --- | --- |\n| `:cmd` | ⌘ |\n| `:shift` | ⇧ |\n| `:ctrl` | ⌃ |\n| `:alt` | ⌥ |\n| `:left` | ← |\n| `:right` | → |\n| `:up` | ↑ |\n| `:down` | ↓ |\n| `:caps_lock` | ⇪ |\n| `:esc` | ⎋ |\n| `:eject` | ⏏ |\n| `:return` | ↵ |\n| `:enter` | ⌅ |\n| `:tab` | ⇥ |\n| `:backtab` | ⇤ |\n| `:pgup` | ⇞ |\n| `:pgdown` | ⇟ |\n| `:home` | ↖ |\n| `:end` | ↘ |\n| `:space` | ␣ |\n| `:del` | ⌫ |\n| `:fdel` | ⌦  |","packageYml":[{"name":"package.yml","content":"# Mac Symbols\n\nmatches:\n  - trigger: \":cmd\"\n    replace: \"⌘\"\n  - trigger: \":shift\"\n    replace: \"⇧\"\n  - trigger: \":ctrl\"\n    replace: \"⌃\"\n  - trigger: \":alt\"\n    replace: \"⌥\"\n  - trigger: \":opt\"\n    replace: \"⌥\"\n  - trigger: \":left\"\n    replace: \"←\"\n  - trigger: \":right\"\n    replace: \"→\"\n  - trigger: \":up\"\n    replace: \"↑\"\n  - trigger: \":down\"\n    replace: \"↓\"\n  - trigger: \":caps_lock\"\n    replace: \"⇪\"\n  - trigger: \":esc\"\n    replace: \"⎋\"\n  - trigger: \":eject\"\n    replace: \"⏏\"\n  - trigger: \":return\"\n    replace: \"↵\"\n  - trigger: \":enter\"\n    replace: \"⌅\"\n  - trigger: \":tab\"\n    replace: \"⇥\"\n  - trigger: \":backtab\"\n    replace: \"⇤\"\n  - trigger: \":pgup\"\n    replace: \"⇞\"\n  - trigger: \":pgdown\"\n    replace: \"⇟\"\n  - trigger: \":home\"\n    replace: \"↖\"\n  - trigger: \":end\"\n    replace: \"↘\"\n  - trigger: \":space\"\n    replace: \"␣\"\n  - trigger: \":del\"\n    replace: \"⌫\"\n  - trigger: \":fdel\"\n    replace: \"⌦\"  \n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"A simple package to display common Mac symbols like ⌘ and ⌥, More details below\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Install the package with:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install mac-symbols\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package replaces the following keywords with the associated mac symbols while you’re typing:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Replaced\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":cmd\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌘\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":shift\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇧\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":ctrl\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌃\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":alt\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌥\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":left\"\n            })\n          }), _jsx(_components.td, {\n            children: \"←\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":right\"\n            })\n          }), _jsx(_components.td, {\n            children: \"→\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":up\"\n            })\n          }), _jsx(_components.td, {\n            children: \"↑\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":down\"\n            })\n          }), _jsx(_components.td, {\n            children: \"↓\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":caps_lock\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇪\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":esc\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⎋\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":eject\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⏏\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":return\"\n            })\n          }), _jsx(_components.td, {\n            children: \"↵\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":enter\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌅\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":tab\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇥\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":backtab\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇤\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":pgup\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇞\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":pgdown\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⇟\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":home\"\n            })\n          }), _jsx(_components.td, {\n            children: \"↖\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":end\"\n            })\n          }), _jsx(_components.td, {\n            children: \"↘\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":space\"\n            })\n          }), _jsx(_components.td, {\n            children: \"␣\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":del\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌫\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":fdel\"\n            })\n          }), _jsx(_components.td, {\n            children: \"⌦\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.1"]},"__N_SSG":true}