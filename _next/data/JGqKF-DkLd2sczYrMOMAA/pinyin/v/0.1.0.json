{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"pinyin-0.1.0","name":"pinyin","author":"Jordan Matelsky","description":"Pinyin vowels","title":"Pinyin","version":"0.1.0","tags":["chinese","languages"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/pinyin-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/pinyin-0.1.0-sha256.txt"},"manifest":{"author":"Jordan Matelsky","description":"Pinyin vowels","name":"pinyin","title":"Pinyin","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/j6k4m8/espanso-pinyin"},"tags":["chinese","languages"]},"readme":"A package that adds support for easily typing [Pinyin](https://en.wikipedia.org/wiki/Pinyin) Mandarin Romanization characters. Transcribing the tones involve adding diacritics above vowels. This is difficult with a conventional QWERTY keyboard, and so this espanso package adds easy mnemonic support to type tones.\n\nThe mnemonic is:\n\n* Type the vowel character\n* Press <kbd>SHIFT</kbd>\n* Type the \"backslash\" <kbd>\\\\</kbd> character\n* Type the number of the tone you wish to add (e.g. 3)\n* Release <kbd>SHIFT</kbd>\n\nFor example, to type `ě`, type <kbd>e</kbd>, <kbd>shift<kbd>\\\\</kbd><kbd>3</kbd></kbd>\n\n| Character | Shortcut |\n|---|-------|\n| ā | `a\\|!` |\n| á | `a\\|@` |\n| ǎ | `a\\|#` |\n| à | `a\\|$` |\n| ē | `e\\|!` |\n| é | `e\\|@` |\n| ě | `e\\|#` |\n| è | `e\\|$` |\n| ī | `i\\|!` |\n| í | `i\\|@` |\n| ì | `i\\|$` |\n| ǐ | `i\\|#` |\n| ō | `o\\|!` |\n| ó | `o\\|@` |\n| ǒ | `o\\|#` |\n| ò | `o\\|$` |\n| ū | `u\\|!` |\n| ú | `u\\|@` |\n| ǔ | `u\\|#` |\n| ù | `u\\|$` |\n| ǖ | `u:\\|!` |\n| ǘ | `u:\\|@` |\n| ǚ | `u:\\|#` |\n| ǜ | `u:\\|$` |","packageYml":[{"name":"package.yml","content":"matches:\n   - trigger: \"a|!\"\n     replace: \"ā\"\n   - trigger: \"a|@\"\n     replace: \"á\"\n   - trigger: \"a|#\"\n     replace: \"ǎ\"\n   - trigger: \"a|$\"\n     replace: \"à\"\n   - trigger: \"e|!\"\n     replace: \"ē\"\n   - trigger: \"e|@\"\n     replace: \"é\"\n   - trigger: \"e|#\"\n     replace: \"ě\"\n   - trigger: \"e|$\"\n     replace: \"è\"\n   - trigger: \"i|!\"\n     replace: \"ī\"\n   - trigger: \"i|@\"\n     replace: \"í\"\n   - trigger: \"i|$\"\n     replace: \"ì\"\n   - trigger: \"i|#\"\n     replace: \"ǐ\"\n   - trigger: \"o|!\"\n     replace: \"ō\"\n   - trigger: \"o|@\"\n     replace: \"ó\"\n   - trigger: \"o|#\"\n     replace: \"ǒ\"\n   - trigger: \"o|$\"\n     replace: \"ò\"\n   - trigger: \"u|!\"\n     replace: \"ū\"\n   - trigger: \"u|@\"\n     replace: \"ú\"\n   - trigger: \"u|#\"\n     replace: \"ǔ\"\n   - trigger: \"u|$\"\n     replace: \"ù\"\n   - trigger: \"u:|!\"\n     replace: \"ǖ\"\n   - trigger: \"u:|@\"\n     replace: \"ǘ\"\n   - trigger: \"u:|#\"\n     replace: \"ǚ\"\n   - trigger: \"u:|$\"\n     replace: \"ǜ\""}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"A package that adds support for easily typing \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Pinyin\",\n        children: \"Pinyin\"\n      }), \" Mandarin Romanization characters. Transcribing the tones involve adding diacritics above vowels. This is difficult with a conventional QWERTY keyboard, and so this espanso package adds easy mnemonic support to type tones.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The mnemonic is:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Type the vowel character\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Press \", _jsx(_components.code, {\n          children: \"SHIFT\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Type the \\\"backslash\\\" \", _jsx(_components.code, {\n          children: \"\\\\\\\\\"\n        }), \" character\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Type the number of the tone you wish to add (e.g. 3)\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Release \", _jsx(_components.code, {\n          children: \"SHIFT\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, to type \", _jsx(_components.code, {\n        children: \"ě\"\n      }), \", type \", _jsx(_components.code, {\n        children: \"e\"\n      }), \", \", _jsx(_components.code, {\n        children: \"shift\"\n      }), \"\\\\\", _jsx(_components.code, {\n        children: \"3\"\n      })]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Character\"\n          }), _jsx(_components.th, {\n            children: \"Shortcut\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ā\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"á\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǎ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"à\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a|$\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ē\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"é\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ě\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"è\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e|$\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ī\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"i|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"í\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"i|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ì\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"i|$\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǐ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"i|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ō\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ó\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǒ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ò\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o|$\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ū\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ú\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǔ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ù\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u|$\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǖ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u:|!\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǘ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u:|@\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǚ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u:|#\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ǜ\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u:|$\"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}