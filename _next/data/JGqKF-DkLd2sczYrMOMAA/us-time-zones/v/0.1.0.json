{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"us-time-zones-0.1.0","name":"us-time-zones","author":"Jon Ouellette","description":"A simple package for printing converted time.","title":"US Time Zones","version":"0.1.0","tags":["time","timezones","us"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/us-time-zones-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/us-time-zones-0.1.0-sha256.txt"},"manifest":{"name":"us-time-zones","title":"US Time Zones","description":"A simple package for printing converted time.","version":"0.1.0","author":"Jon Ouellette","tags":["time","timezones","us"],"homepage":{"_tag":"None"}},"readme":"# US Time Zones\n\nThis package converts current time to US time zones.\n\n## Installation\n\n```\nespanso install us-time-zones\n```\n\n## Usage\n\nThe triggers are based on timezone and hour-format desired. Daylight savings is based system timezone and is printed with output. \n\n#### Examples\n\n`:et12` for Eastern Time, 12-Hour format. \n\n`:pt24` for Pacific Time, 24-Hour format.\n\n\n\n### Eastern Time\n\n**America/New_York - Eastern Standard Time (EST) / Eastern Daylight Time (EDT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:et12`   | 04:31:28 PM EDT |\n| `:et24`   | 16:33:51 EDT |\n\n---\n\n### Central Time\n\n**America/Chicago - Central Standard Time (CST) / Central Daylight Time (CDT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:ct12`   | 03:35:13 PM CDT |\n| `:ct24`   | 15:35:21 CDT |\n\n---\n\n### Mountain Time\n\n**America/Denver - Mountain Standard Time (MST) / Mountain Daylight Time (MDT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:mt12`   | 02:36:28 PM MDT |\n| `:mt24`   | 14:36:35 MDT |\n\n---\n\n### Pacific Time\n\n**America/Los_Angeles - Pacific Standard Time (PST) / Pacific Daylight Time (PDT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:pt12`   | 01:37:54 PM PDT |\n| `:pt24`   | 13:38:02 PDT |\n\n---\n\n### Alaska Time\n\n**America/Anchorage - Alaska Standard Time (AKST) / Alaska Daylight Time (AKDT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:at12`   | 12:39:02 PM AKDT |\n| `:at24`   | 12:39:09 AKDT |\n\n---\n\n### Hawaii-Aleutian Time\n\n**America/Adak - Hawaii-Aleutian Standard Time (HAST) / Hawaii-Aleutian Daylight Time (HADT)**\n\n|  Trigger  | Replacement |\n|-----------|---------|\n| `:hat12`   | 11:42:09 AM HDT |\n| `:hat24`   | 11:41:25 HDT |\n\n---","packageYml":[{"name":"package.yml","content":"matches:\n  # 12-HOUR FORMAT ##########################################\n    # Eastern Time\n  - trigger: \":et12\"\n    replace: \"{{et12}}\"\n    vars:\n      - name: et12\n        type: shell\n        params:\n          cmd: TZ='America/New_York' date \"+%I:%M:%S %p %Z\"\n   # Central Time\n  - trigger: \":ct12\"\n    replace: \"{{ct12}}\"\n    vars:\n      - name: ct12\n        type: shell\n        params:\n          cmd: TZ='America/Chicago' date \"+%I:%M:%S %p %Z\" \n  # Mountain Time\n  - trigger: \":mt12\"\n    replace: \"{{mt12}}\"\n    vars:\n      - name: mt12\n        type: shell\n        params:\n          cmd: TZ='America/Denver' date \"+%I:%M:%S %p %Z\"\n  # Pacific Time\n  - trigger: \":pt12\"\n    replace: \"{{pt12}}\"\n    vars:\n      - name: pt12\n        type: shell\n        params:\n          cmd: TZ='America/Los_Angeles' date \"+%I:%M:%S %p %Z\"\n  # Alaska Time\n  - trigger: \":at12\"\n    replace: \"{{at12}}\"\n    vars:\n      - name: at12\n        type: shell\n        params:\n          cmd: TZ='America/Anchorage' date \"+%I:%M:%S %p %Z\"\n  # Hawaii-Aleutian Time\n  - trigger: \":hat12\"\n    replace: \"{{hat12}}\"\n    vars:\n      - name: hat12\n        type: shell\n        params:\n          cmd: TZ='America/Adak' date \"+%I:%M:%S %p %Z\"\n  # 24-HOUR FORMAT ##########################################\n  # Eastern Time\n  - trigger: \":et24\"\n    replace: \"{{et24}}\"\n    vars:\n      - name: et24\n        type: shell\n        params:\n          cmd: TZ='America/New_York' date \"+%H:%M:%S %Z\"\n   # Central Time\n  - trigger: \":ct24\"\n    replace: \"{{ct24}}\"\n    vars:\n      - name: ct24\n        type: shell\n        params:\n          cmd: TZ='America/Chicago' date \"+%H:%M:%S %Z\" \n  # Mountain Time\n  - trigger: \":mt24\"\n    replace: \"{{mt24}}\"\n    vars:\n      - name: mt24\n        type: shell\n        params:\n          cmd: TZ='America/Denver' date \"+%H:%M:%S %Z\"\n  # Pacific Time\n  - trigger: \":pt24\"\n    replace: \"{{pt24}}\"\n    vars:\n      - name: pt24\n        type: shell\n        params:\n          cmd: TZ='America/Los_Angeles' date \"+%H:%M:%S %Z\"\n  # Alaska Time\n  - trigger: \":at24\"\n    replace: \"{{at24}}\"\n    vars:\n      - name: at24\n        type: shell\n        params:\n          cmd: TZ='America/Anchorage' date \"+%H:%M:%S %Z\"\n  # Hawaii-Aleutian Time\n  - trigger: \":hat24\"\n    replace: \"{{hat24}}\"\n    vars:\n      - name: hat24\n        type: shell\n        params:\n          cmd: TZ='America/Adak' date \"+%H:%M:%S %Z\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h4: \"h4\",\n    h3: \"h3\",\n    strong: \"strong\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"US Time Zones\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package converts current time to US time zones.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install us-time-zones\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The triggers are based on timezone and hour-format desired. Daylight savings is based system timezone and is printed with output.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Examples\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \":et12\"\n      }), \" for Eastern Time, 12-Hour format.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \":pt24\"\n      }), \" for Pacific Time, 24-Hour format.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Eastern Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/New_York - Eastern Standard Time (EST) / Eastern Daylight Time (EDT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":et12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"04:31:28 PM EDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":et24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"16:33:51 EDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Central Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/Chicago - Central Standard Time (CST) / Central Daylight Time (CDT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":ct12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"03:35:13 PM CDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":ct24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"15:35:21 CDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Mountain Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/Denver - Mountain Standard Time (MST) / Mountain Daylight Time (MDT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":mt12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"02:36:28 PM MDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":mt24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"14:36:35 MDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Pacific Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/Los_Angeles - Pacific Standard Time (PST) / Pacific Daylight Time (PDT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":pt12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"01:37:54 PM PDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":pt24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"13:38:02 PDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Alaska Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/Anchorage - Alaska Standard Time (AKST) / Alaska Daylight Time (AKDT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":at12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"12:39:02 PM AKDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":at24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"12:39:09 AKDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Hawaii-Aleutian Time\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"America/Adak - Hawaii-Aleutian Standard Time (HAST) / Hawaii-Aleutian Daylight Time (HADT)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Replacement\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":hat12\"\n            })\n          }), _jsx(_components.td, {\n            children: \"11:42:09 AM HDT\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":hat24\"\n            })\n          }), _jsx(_components.td, {\n            children: \"11:41:25 HDT\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}