{"pageProps":{"packageRepo":{"package":{"id":"html-utils-package-0.1.0","name":"html-utils-package","author":"Gabriel Barbosa","description":"A simple package to make coding in HTML5 easier.","title":"HTML utilities package","version":"0.1.0","tags":["frontend","html","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/html-utils-package-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/html-utils-package-0.1.0-sha256.txt"},"manifest":{"author":"Gabriel Barbosa","description":"A simple package to make coding in HTML5 easier.","name":"html-utils-package","title":"HTML utilities package","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/woodenbell/html-utils-package"},"tags":["frontend","html","development"]},"readme":"# html-utils-package\n\nMake HTML5 easier and less time-consuming with this [Espanso](https://espanso.org/) package!\n\n# Installation\n\nMake sure you have already installed [Espanso](https://espanso.org/install/) first.\n\n```\nespanso install html-utils-package\n```\n\nThat's all. You can start using the package. Open your favorite editor and type `:doctype` to test!\n\n# Triggers\n\n| Trigger  | Result |\n| ------------- | ------------- |\n| `::docskel` | Generates an empty document with `utf-8` and `viewport` headers (unindented) |\n| `::doctype` | `<!DOCTYPE html>` |\n| `::charset` | `<meta charset=\"\">` |\n| `::utf-8` | `<meta charset=\"UTF-8\">` |\n| `::viewport` | `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">` |\n| `::meta-author` | `<meta name=\"author\" content=\"\">` |\n| `::meta-desc` | `<meta name=\"description\" content=\"\">` |\n| `::meta-keywords` | `<meta name=\"keywords\" content=\"\">` |\n| `::title` | `<title></title>` |\n| `::div` | `<div></div>` |\n| `::html` | `<html></html>` |\n| `::head` | `<head></head>` |\n| `::body` | `<body></body>` |\n| `::a` | `<a href=\"\"></a>` |\n| `::br` | `<br>` |\n| `::button` | `<button type=\"button\"></button> ` |\n| `::style` | `<style></style>` |\n| `::css` | `<link rel=\"stylesheet\" type=\"text/css\" href=\"\">` |\n| `::script` | `<script></script>` |\n| `::js` | `<script type=\"text/javascript\" src=\"\"></script>` |\n| `::form` | `<form action=\"\" method=\"\"></form>` |\n| `::label` | `<label for=\"\"></label>` |\n| `::submit` | `<input type=\"submit\" value=\"\">` |\n| `::input-text` | `<input type=\"text\" name=\"\" id=\"\">` |\n| `::input-password` | `<input type=\"password\" name=\"\" id=\"\">` |\n| `::input-radio` | `<input type=\"radio\" name=\"\" id=\"\" value=\"\">` |\n| `::input-checkbox` | `<input type=\"checkbox\" name=\"\" id=\"\" value=\"\">` |\n| `::input-file` | `<input type=\"file\" name=\"\" id=\"\">` |\n\n# Contributions\nIf you feel like there's any important tag/snippet missing, feel free to create a Pull Request or open an [Issue](https://github.com/woodenbell/html-utils-package/issues/new).","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \":doctype\"\n    replace: >-\n      <!DOCTYPE html>\n\n  - trigger: \":charset\"\n    replace: >-\n      <meta charset=\"$|$\">\n  \n  - trigger: \":utf-8\"\n    replace: >-\n      <meta charset=\"UTF-8\">\n  \n  - trigger: \":viewport\"\n    replace: >-\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  - trigger: \":meta-author\"\n    replace: >-\n      <meta name=\"author\" content=\"$|$\">\n\n  - trigger: \":meta-desc\"\n    replace: >-\n      <meta name=\"description\" content=\"$|$\">\n\n  - trigger: \":meta-keywords\"\n    replace: >-\n      <meta name=\"keywords\" content=\"$|$\">\n\n  - trigger: \":title\"\n    replace: >-\n      <title>$|$</title>\n\n  - trigger: \":div\"\n    replace: >-\n      <div>$|$</div>\n\n  - trigger: \":html\"\n    replace: >-\n      <html>$|$</html>\n\n  - trigger: \":head\"\n    replace: >-\n      <head>$|$</head>\n\n  - trigger: \":body\"\n    replace: >-\n      <body>$|$</body>\n  \n  - trigger: \":a\"\n    replace: >-\n      <a href=\"\">$|$</a>\n\n  - trigger: \":br\"\n    replace: >-\n      <br>\n\n  - trigger: \":button\"\n    replace: >-\n       <button type=\"button\">$|$</button> \n  \n  - trigger: \":style\"\n    replace: >-\n      <style>$|$</style>\n  \n  - trigger: \":css\"\n    replace: >-\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"$|$\">\n  \n  - trigger: \":script\"\n    replace: >-\n      <script>$|$</script>\n  \n  - trigger: \":js\"\n    replace: >-\n      <script type=\"text/javascript\" src=\"$|$\"></script>\n\n  - trigger: \":form\"\n    replace: >-\n      <form action=\"\" method=\"\">$|$</form>\n  \n  - trigger: \":label\"\n    replace: >-\n      <label for=\"\">$|$</label>\n  \n  - trigger: \":submit\"\n    replace: >-\n      <input type=\"submit\" value=\"$|$\">\n\n  - trigger: \":input-text\"\n    replace: >-\n      <input type=\"text\" name=\"\" id=\"\">\n\n  - trigger: \":input-password\"\n    replace: >-\n      <input type=\"password\" name=\"\" id=\"\">\n\n  - trigger: \":input-radio\"\n    replace: >-\n      <input type=\"radio\" name=\"\" id=\"\" value=\"$|$\">\n\n  - trigger: \":input-checkbox\"\n    replace: >-\n      <input type=\"checkbox\" name=\"\" id=\"\" value=\"$|$\">\n\n  - trigger: \":input-file\"\n    replace: >-\n      <input type=\"file\" name=\"\" id=\"\">"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"html-utils-package\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Make HTML5 easier and less time-consuming with this \", _jsx(_components.a, {\n        href: \"https://espanso.org/\",\n        children: \"Espanso\"\n      }), \" package!\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Installation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Make sure you have already installed \", _jsx(_components.a, {\n        href: \"https://espanso.org/install/\",\n        children: \"Espanso\"\n      }), \" first.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install html-utils-package\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"That's all. You can start using the package. Open your favorite editor and type \", _jsx(_components.code, {\n        children: \":doctype\"\n      }), \" to test!\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Triggers\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Result\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::docskel\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"Generates an empty document with \", _jsx(_components.code, {\n              children: \"utf-8\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"viewport\"\n            }), \" headers (unindented)\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::doctype\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<!DOCTYPE html>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::charset\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta charset=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::utf-8\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta charset=\\\"UTF-8\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::viewport\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-author\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"author\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-desc\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"description\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::meta-keywords\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<meta name=\\\"keywords\\\" content=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::title\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<title></title>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::div\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<div></div>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::html\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<html></html>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::head\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<head></head>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::body\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<body></body>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::a\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<a href=\\\"\\\"></a>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::br\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<br/>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::button\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<button type=\\\"button\\\"></button> \"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::style\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<style></style>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::css\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::script\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<script></script>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::js\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<script type=\\\"text/javascript\\\" src=\\\"\\\"></script>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::form\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<form action=\\\"\\\" method=\\\"\\\"></form>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::label\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<label for=\\\"\\\"></label>\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::submit\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"submit\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-text\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-password\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"password\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-radio\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"radio\\\" name=\\\"\\\" id=\\\"\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-checkbox\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"\\\" value=\\\"\\\">\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"::input-file\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"<input type=\\\"file\\\" name=\\\"\\\" id=\\\"\\\">\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Contributions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you feel like there's any important tag/snippet missing, feel free to create a Pull Request or open an \", _jsx(_components.a, {\n        href: \"https://github.com/woodenbell/html-utils-package/issues/new\",\n        children: \"Issue\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["2.0.1","0.1.1","0.1.0"]},"__N_SSG":true}