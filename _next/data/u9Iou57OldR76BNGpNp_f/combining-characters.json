{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"combining-characters-0.2.0","name":"combining-characters","author":"José Ferreira","description":"Modifies characters with a collection of symbols e.g.: à, â, a⃗, a̅, a⃜","title":"Letter modifiers","version":"0.2.0","tags":["symbols","math"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/combining-characters-0.2.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/combining-characters-0.2.0-sha256.txt"},"manifest":{"author":"José Ferreira","description":"Modifies characters with a collection of symbols e.g.: à, â, a⃗, a̅, a⃜","name":"combining-characters","title":"Letter modifiers","version":"0.2.0","homepage":{"_tag":"Some","value":"https://github.com/jpmvferreira/espanso-mega-pack"},"tags":["symbols","math"]},"readme":"# Available matches\n| Trigger                  | Replace   |\n|--------------------------|-----------|\n| :vec:                    | x⃗         |\n| :underrightarrow:, :ura: | x⃯         |\n| :underleftarrow:, :ula:  | x⃮         |\n| :overleftarrow:, :ola:   | x⃡         |\n| :underline:, :ul:        | x̲         |\n| :bar:                    | x̅         |\n| :acute:                  | x́         |\n| :macron:                 | x̄         |\n| :breve:                  | x̆         |\n| :caron:                  | x̌         |\n| :ddddot:                 | x⃜         |\n| :dddot:                  | x⃛         |\n| :ddot:                   | ẍ         |\n| :dot:                    | ẋ         |\n| :grave:                  | x̀         |\n| :hat:                    | x̂         |\n| :widehat:                | x̂         |\n| :tilde:                  | x̃         |\n| :widetilde:              | x̃         |\n| :​ring:                   | x̊         |\n| :not:, :slash:           | x̸         |\n\n# How to use this package\nAll you have to do in order to use this package is to type a combining character trigger (e.g. `:vec:`) in front of any character you would like (e.g. a or γ) and obtain the resulting combination (in this example a⃗ or γ⃗).\n\nEach combining character should work for any character, not only for the character `x`, as long as it corresponds to a valid unicode character.\n\nIf you are facing issues with the rendering on your program, you might have to install adequate fonts. I myself use Droid Sans (the Mono variant) and JuliaMono and haven't faced any issues rendering any unicode character.\n","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \":vec:\"  # e.g.: x⃗\n    replace: \"\\u20d7\"\n\n  - triggers: [\":underrightarrow:\", \":ura:\"]  # e.g.: x⃯\n    replace: \"\\u20ef\"\n\n  - triggers: [\":underleftarrow:\", \":ula:\"]  # e.g.: x⃮\n    replace: \"\\u20ee\"\n\n  - triggers: [\":overleftarrow:\", \":ola:\"]  # e.g.: x⃡\n    replace: \"\\u20e1\"\n\n  - triggers: [\":underline:\", \":ul:\"]  # e.g.: x̲\n    replace: \"\\u0332\"\n\n  - trigger: \":bar:\"  # e.g.: x̅\n    replace: \"\\u0305\"\n\n  - trigger: \":acute:\"  # e.g.: x́\n    replace: \"\\u0301\"\n\n  - trigger: \":macron:\"  # e.g.: x̄\n    replace: \"\\u0304\"\n\n  - trigger: \":breve:\"  # e.g.: x̆\n    replace: \"\\u0306\"\n\n  - trigger: \":caron:\"  # e.g.: x̌\n    replace: \"\\u030c\"\n\n  - trigger: \":ddddot:\"  # e.g.: x⃛\n    replace: \"\\u20dc\"\n\n  - trigger: \":dddot:\"  # e.g.: x⃛\n    replace: \"\\u20db\"\n\n  - trigger: \":ddot:\"  # e.g.: ẍ\n    replace: \"\\u0308\"\n\n  - trigger: \":dot:\"  # e.g.: ẋ\n    replace: \"\\u0307\"\n\n  - trigger: \":grave:\"  # e.g.: x̀\n    replace: \"\\u0300\"\n\n  - trigger: \":hat:\"  # e.g.: x̂\n    replace: \"\\u0302\"\n\n  - trigger: \":widehat:\"  # e.g.: x̂\n    replace: \"\\u0302\"\n\n  - trigger: \":tilde:\"  # e.g.: x̃\n    replace: \"\\u0303\"\n\n  - trigger: \":widetilde:\"  # e.g.: x̃\n    replace: \"\\u0303\"\n\n  - trigger: \":ring:\"  # e.g.: x̊\n    replace: \"\\u030a\"\n\n  - triggers: [\":not:\", \":slash:\"]  # e.g.: x̸\n    replace: \"\\u0338\"\n"}],"license":{"_tag":"Some","value":"MIT License\n\nCopyright (c) 2021 José Ferreira\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"},"serializedReadme":{"compiledSource":"var u=Object.defineProperty,N=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var o=(a,e,n)=>e in a?u(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n,t=(a,e)=>{for(var n in e||(e={}))d.call(e,n)&&o(a,n,e[n]);if(l)for(var n of l(e))i.call(e,n)&&o(a,n,e[n]);return a},p=(a,e)=>N(a,g(e));var m=(a,e)=>{var n={};for(var r in a)d.call(a,r)&&e.indexOf(r)<0&&(n[r]=a[r]);if(a!=null&&l)for(var r of l(a))e.indexOf(r)<0&&i.call(a,r)&&(n[r]=a[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:a}=r,e=m(r,[\"components\"]);return mdx(MDXLayout,p(t(t({},layoutProps),e),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Available matches\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Trigger\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Replace\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":vec:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20D7\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":underrightarrow:, :ura:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20EF\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":underleftarrow:, :ula:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20EE\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":overleftarrow:, :ola:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20E1\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":underline:, :ul:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0332\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":bar:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0305\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":acute:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0301\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":macron:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0304\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":breve:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0306\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":caron:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u030C\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":ddddot:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20DC\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":dddot:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u20DB\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":ddot:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0308\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":dot:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0307\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":grave:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0300\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":hat:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0302\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":widehat:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0302\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":tilde:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0303\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":widetilde:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0303\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":\\u200Bring:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u030A\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\":not:, :slash:\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"x\\u0338\")))),mdx(\"h1\",null,\"How to use this package\"),mdx(\"p\",null,\"All you have to do in order to use this package is to type a combining character trigger (e.g. \",mdx(\"inlineCode\",{parentName:\"p\"},\":vec:\"),\") in front of any character you would like (e.g. a or \\u03B3) and obtain the resulting combination (in this example a\\u20D7 or \\u03B3\\u20D7).\"),mdx(\"p\",null,\"Each combining character should work for any character, not only for the character \",mdx(\"inlineCode\",{parentName:\"p\"},\"x\"),\", as long as it corresponds to a valid unicode character.\"),mdx(\"p\",null,\"If you are facing issues with the rendering on your program, you might have to install adequate fonts. I myself use Droid Sans (the Mono variant) and JuliaMono and haven't faced any issues rendering any unicode character.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"versions":["0.2.0","0.1.0"]},"__N_SSG":true}