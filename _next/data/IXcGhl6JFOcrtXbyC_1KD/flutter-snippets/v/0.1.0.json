{"pageProps":{"packageRepo":{"package":{"id":"flutter-snippets-0.1.0","name":"flutter-snippets","author":"rishi","description":"A package for flutter code snippets","title":"Flutter snippets","version":"0.1.0","tags":["development","flutter","code"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/flutter-snippets-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/flutter-snippets-0.1.0-sha256.txt"},"manifest":{"name":"flutter-snippets","title":"Flutter snippets","description":"A package for flutter code snippets","version":"0.1.0","author":"rishi","tags":["development","flutter","code"],"homepage":{"_tag":"None"}},"readme":"# A package for some commonly used flutter code snippets\n\nCode snippets taken from [awesome-flutter-snippets](https://github.com/Nash0x7E2/awesome-flutter-snippets).\n\n## Installation\n\nInstall the package with:\n\n``` shell\nespanso install flutter-snippets\n```\n\n## Usage\n\nThis package replaces the following keywords with the associated code snippet while you're typing:\n\nKeyword | Description\n--- | ---\n[`:stlw`](#stateless-widget) | Stateless widget\n[`:stfl`](#statefull-widget) | Statefull widget\n[`:build`](#build-method) | Build method\n[`:customPainter`](#custompainter-widget) | Custom Painter widget\n[`:customClipper`](#customclipper-widget) | Custom Clipper widget\n[`:initS`](#initstate-method) | initState method\n[`:disp`](#dispose-method) | dispose method\n[`:reassemble`](#reassemble-method) | reassemble method\n[`:didChangeD`](#didchangedependencies-method) | didChangeDependencies method\n[`:didUpdateW`](#didupdatewidget-method) | didUpdateWidget method\n[`:importM`](#import-materialdart) | Import material.dart\n[`:importC`](#import-cupertinodart) | Import cupertino.dart\n\n</br>\n\n> ## Stateless widget\n>\n> ### Keyword => **:stlw**\n>\n> ```dart\n> import 'package:flutter/material.dart';\n>\n> class Example extends StatelessWidget {\n>  @override\n>  Widget build(BuildContext context) {\n>   return Container(\n>    child: Text('Hello World'),\n>   );\n>  }\n> }\n> ```\n<!-- -->\n> ## Statefull widget\n>\n> ### Keyword => **:stfl**\n>\n> ```dart\n> import 'package:flutter/material.dart';\n>\n> class Example extends StatefulWidget {\n> @override\n> _ExampleState createState() =>_ExampleState();\n> }\n>\n> class _ExampleState extends State<Example> {\n> @override\n> Widget build(BuildContext context) {\n>   return Container(\n>    child: Text('Hello World'),\n>   );\n>  }\n> }\n> ```\n<!-- -->\n> ## Build method\n>\n> ### Keyword => **:build**\n>\n> ```dart\n> @override\n> Widget build(BuildContext context) {\n>  return Container(\n>   child: Text('Hello World'),\n>  );\n> }\n> ```\n<!-- -->\n> ## CustomPainter widget\n>\n> ### Keyword => **:customPainter**\n>\n> ```dart\n> class ExamplePainter extends CustomPainter {\n> \n>  @override\n>  void paint(Canvas canvas, Size size) { }\n>  @override\n>  bool shouldRepaint(${0:name}Painter oldDelegate) => false;\n> \n>  @override\n>  bool shouldRebuildSemantics(${0:name}Painter oldDelegate) => false;\n> }\n> ```\n<!-- -->\n> ## CustomClipper widget\n>\n> ### Keyword => **:customClipper**\n>\n> ```dart\n> class ExampleClipper extends CustomClipper<Path> {\n> \n>  @override\n>  Path getClip(Size size) { }\n> \n>  @override\n>  bool shouldReclip(CustomClipper<Path> oldClipper) => false;\n> }\n> ```\n<!-- -->\n> ## initState method\n>\n> ### Keyword => **:initS**\n>\n> ```dart\n> @override\n> void  initState() {\n>  // TODO: Enter your code here\n>  super.initState();\n> }\n> ```\n<!-- -->\n> ## dispose method\n>\n> ### Keyword => **:disp**\n>\n> ```dart\n> @override\n> void  dispose() {\n>  // TODO: Enter your code here\n>  super.dispose();\n> }\n> ```\n<!-- -->\n> ## reassemble method\n>\n> ### Keyword => **:reassemble**\n>\n> ```dart\n> @override\n> void  reassemble() {\n>  // TODO: Enter your code here\n>  super.reassemble();\n> }\n> ```\n<!-- -->\n> ## didChangeDependencies method\n>\n> ### Keyword => **:didChangeD**\n>\n> ```dart\n> @override\n> void  didChangeDependencies() {\n>  // TODO: Enter your code here\n>  super.didChangeDependencies();\n> }\n> ```\n<!-- -->\n> ## didUpdateWidget method\n>\n> ### Keyword => **:didUpdateW**\n>\n> ```dart\n> @override\n> void  didUpdateWidget(Widget widget) {\n>  // TODO: Enter your code here\n>  super.didUpdateWidget(oldWidget);\n> }\n> ```\n<!-- -->\n> ## import material.dart\n>\n> ### Keyword => **:importM**\n>\n> ```dart\n> import 'package:flutter/material.dart';\n> ```\n<!-- -->\n> ## import cupertino.dart\n>\n> ### Keyword => **:importC**\n>\n> ```dart\n> import 'package:flutter/cupertino.dart';\n> ```\n","packageYml":[{"name":"package.yml","content":"matches:\n    # Sstateless widget\n    - trigger: ':stlw'\n      vars:\n          - name: form\n            type: form\n            params:\n                layout: |\n                    Widget name [[name]]\n      replace: \"import 'package:flutter/material.dart';\\n\\nclass {{form.name}} extends StatelessWidget {\\n\\t@override\\n\\tWidget build(BuildContext context) {\\n\\t\\treturn Container(\\n\\t\\t\\tchild: Text('Hello World'),\\n\\t\\t);\\n\\t}\\n}\"\n\n    # Statefull widget\n    - trigger: ':stfl'\n      vars:\n          - name: form\n            type: form\n            params:\n                layout: |\n                    Widget name [[name]]\n      replace: \"import 'package:flutter/material.dart';\\n\\nclass {{form.name}} extends StatefulWidget {\\n\\t@override\\n\\t_{{form.name}}State createState() => _{{form.name}}State();\\n}\\n\\nclass _{{form.name}}State extends State<{{form.name}}> {\\n\\t@override\\n\\tWidget build(BuildContext context) {\\n\\t\\treturn Container(\\n\\t\\t\\tchild: Text('Hello World'),\\n\\t\\t);\\n\\t}\\n}\"\n\n    # Describes the part of the user interface represented by this widget.\n    - trigger: ':build'\n      replace: \"@override\\nWidget build(BuildContext context) {\\n\\treturn Container(\\n\\t\\tchild: Text('Hello World'),\\n\\t);\\n}\"\n\n    # Used for creating custom paint.\n    - trigger: ':customPainter'\n      vars:\n          - name: form\n            type: form\n            params:\n                layout: |\n                    Widget name [[name]]\n      replace: \"class {{form.name}}Painter extends CustomPainter {\\n\\n\\t@override\\n\\tvoid paint(Canvas canvas, Size size) { }\\n\\t@override\\n\\tbool shouldRepaint(${0:name}Painter oldDelegate) => false;\\n\\n\\t@override\\n\\tbool shouldRebuildSemantics(${0:name}Painter oldDelegate) => false;\\n}\"\n\n    # Used for creating custom shapes.\n    - trigger: ':customClipper'\n      vars:\n          - name: form\n            type: form\n            params:\n                layout: |\n                    Widget name [[name]]\n      replace: \"class {{form.name}}Clipper extends CustomClipper<Path> {\\n\\n\\t@override\\n\\tPath getClip(Size size) { }\\n\\n\\t@override\\n\\tbool shouldReclip(CustomClipper<Path> oldClipper) => false;\\n}\"\n\n    # Called when this object is inserted into the tree. The framework will call this method exactly once for each State object it creates.\n    - trigger: ':initS'\n      replace: \"@override\\nvoid  initState() {\\n\\t// TODO: Enter your code here\\n\\tsuper.initState();\\n}\"\n\n    # Called when this object is removed from the tree permanently. The framework calls this method when this State object will never build again.\n    - trigger: ':dis'\n      replace: \"@override\\nvoid  dispose() {\\n\\t// TODO: Enter your code here\\n\\tsuper.dispose();\\n}\"\n\n    # \"Called whenever the application is reassembled during debugging, for example during hot reload.\n    - trigger: ':reassemble'\n      replace: \"@override\\nvoid  reassemble() {\\n\\t// TODO: Enter your code here\\n\\tsuper.reassemble();\\n}\"\n\n    # \"Called when a dependency of this State object changes.\n    - trigger: ':didChangeD'\n      replace: \"@override\\nvoid  didChangeDependencies() {\\n\\t// TODO: Enter your code here\\n\\tsuper.didChangeDependencies();\\n}\"\n\n    # \"Called whenever the widget configuration changes.\n    - trigger: ':didUpdateW'\n      vars:\n          - name: form\n            type: form\n            params:\n                layout: |\n                    Widget type [[type]]\n                    Widgent name [[name]]\n      replace: \"@override\\nvoid  didUpdateWidget({{form.type}} {{form.name}}) {\\n\\t// TODO: Enter your code here\\n\\tsuper.didUpdateWidget({{form.name}});\\n}\"\n\n    # \"Import flutter material package.\n    - trigger: ':importM'\n      replace: \"import 'package:flutter/material.dart';\"\n\n    # \"Import flutter Cupertino package.\n    - trigger: ':importC'\n      replace: \"import 'package:flutter/cupertino.dart';\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"A package for some commonly used flutter code snippets\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Code snippets taken from \", _jsx(_components.a, {\n        href: \"https://github.com/Nash0x7E2/awesome-flutter-snippets\",\n        children: \"awesome-flutter-snippets\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Install the package with:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-shell\",\n        children: \"espanso install flutter-snippets\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package replaces the following keywords with the associated code snippet while you're typing:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#stateless-widget\",\n              children: _jsx(_components.code, {\n                children: \":stlw\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Stateless widget\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#statefull-widget\",\n              children: _jsx(_components.code, {\n                children: \":stfl\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Statefull widget\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#build-method\",\n              children: _jsx(_components.code, {\n                children: \":build\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Build method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#custompainter-widget\",\n              children: _jsx(_components.code, {\n                children: \":customPainter\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Custom Painter widget\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#customclipper-widget\",\n              children: _jsx(_components.code, {\n                children: \":customClipper\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Custom Clipper widget\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#initstate-method\",\n              children: _jsx(_components.code, {\n                children: \":initS\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"initState method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#dispose-method\",\n              children: _jsx(_components.code, {\n                children: \":disp\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"dispose method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#reassemble-method\",\n              children: _jsx(_components.code, {\n                children: \":reassemble\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"reassemble method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#didchangedependencies-method\",\n              children: _jsx(_components.code, {\n                children: \":didChangeD\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"didChangeDependencies method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#didupdatewidget-method\",\n              children: _jsx(_components.code, {\n                children: \":didUpdateW\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"didUpdateWidget method\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#import-materialdart\",\n              children: _jsx(_components.code, {\n                children: \":importM\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Import material.dart\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#import-cupertinodart\",\n              children: _jsx(_components.code, {\n                children: \":importC\"\n              })\n            })\n          }), _jsx(_components.td, {\n            children: \"Import cupertino.dart\"\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"Stateless widget\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":stlw\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"import 'package:flutter/material.dart';\\n\\nclass Example extends StatelessWidget {\\n @override\\n Widget build(BuildContext context) {\\n  return Container(\\n   child: Text('Hello World'),\\n  );\\n }\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"Statefull widget\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":stfl\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"import 'package:flutter/material.dart';\\n\\nclass Example extends StatefulWidget {\\n@override\\n_ExampleState createState() =>_ExampleState();\\n}\\n\\nclass _ExampleState extends State<Example> {\\n@override\\nWidget build(BuildContext context) {\\n  return Container(\\n   child: Text('Hello World'),\\n  );\\n }\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"Build method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":build\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nWidget build(BuildContext context) {\\n return Container(\\n  child: Text('Hello World'),\\n );\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"CustomPainter widget\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":customPainter\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"class ExamplePainter extends CustomPainter {\\n\\n @override\\n void paint(Canvas canvas, Size size) { }\\n @override\\n bool shouldRepaint(${0:name}Painter oldDelegate) => false;\\n\\n @override\\n bool shouldRebuildSemantics(${0:name}Painter oldDelegate) => false;\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"CustomClipper widget\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":customClipper\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"class ExampleClipper extends CustomClipper<Path> {\\n\\n @override\\n Path getClip(Size size) { }\\n\\n @override\\n bool shouldReclip(CustomClipper<Path> oldClipper) => false;\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"initState method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":initS\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nvoid  initState() {\\n // TODO: Enter your code here\\n super.initState();\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"dispose method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":disp\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nvoid  dispose() {\\n // TODO: Enter your code here\\n super.dispose();\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"reassemble method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":reassemble\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nvoid  reassemble() {\\n // TODO: Enter your code here\\n super.reassemble();\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"didChangeDependencies method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":didChangeD\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nvoid  didChangeDependencies() {\\n // TODO: Enter your code here\\n super.didChangeDependencies();\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"didUpdateWidget method\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":didUpdateW\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"@override\\nvoid  didUpdateWidget(Widget widget) {\\n // TODO: Enter your code here\\n super.didUpdateWidget(oldWidget);\\n}\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"import material.dart\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":importM\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"import 'package:flutter/material.dart';\\n\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.h2, {\n        children: \"import cupertino.dart\"\n      }), \"\\n\", _jsxs(_components.h3, {\n        children: [\"Keyword => \", _jsx(_components.strong, {\n          children: \":importC\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dart\",\n          children: \"import 'package:flutter/cupertino.dart';\\n\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.1.0"]},"__N_SSG":true}