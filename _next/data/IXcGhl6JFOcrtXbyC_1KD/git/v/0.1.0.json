{"pageProps":{"packageRepo":{"package":{"id":"git-0.1.0","name":"git","author":"Angelo Rafael","description":"A package of commands of git.","title":"Git","version":"0.1.0","tags":["shell","git","alias"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/git-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/git-0.1.0-sha256.txt"},"manifest":{"author":"Angelo Rafael","description":"A package of commands of git.","name":"git","title":"Git","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/angelorpt/espanso-git"},"tags":["shell","git","alias"]},"readme":"# Espanso GIT\n\nImprove your git experience using this snippets triggers, become a faster developer at cli.\n\n## Triggers\n\n### Configurations\n\nTrigger  | Command\n---------|----------\ngiti. | `git init`\ngitcl. | `git clone`\ngitconfigline1. | `git config --global core.autocrlf true`\ngitconfigline2. | `git config --global core.safecrlf warn`\ngitemailg. | `git config --global user.email \"\"`\ngitemaill. | `git config --local user.email \"\"`\ngituserg. | `git config --global user.name \"\"`\ngituserl. | `git config --local user.name \"\"`\n\n<br>\n\n### Push | Pull \n\nTrigger  | Command\n---------|----------\ngits. | `git status`\ngita. | `git add .`\ngitc. | `git commit -m \"\"`\ngitamc. | `git commit --amend -m \"\"`\ngitama. | `git commit --amend --author=\"User Name <email@email.com>\"`\ngitp. | `git push origin`\ngitpf. | `git push origin --force `\ngitu. | `git pull origin`\ngitru. | `git remote update`\ngitfa. | `git fetch --all`\n\n<br>\n\n### Stash\n\nTrigger  | Command\n---------|----------\ngitst. | `git stash`\ngitstl. | `git stash list`\ngitsts. | `git stash show`\ngitstp. | `git stash pop`\ngitstd. | `git stash drop`\n\n<br>\n\n### Branch\n\nTrigger  | Command\n---------|----------\ngitm. | `git merge`\ngitmb. | `git merge`\ngitchk. | `git checkout`\ngitchkb. | `git checkout -b` \ngitnb. | `git checkout -b` \ngitb. | `git branch`\ngitba. | `git branch -a`\ngitbd. | `git branch -d `\ngitbdr. | `git push origin --delete` \n\n<br>\n\n### Log\n\nTrigger  | Command\n---------|----------\ngitl. | `git log`\ngitlp. | `git log --pretty=oneline`\ngitlo. | `git log --oneline`\ngitlgo. | `git log --graph --oneline`\ngitlpf. | `git log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short`\n\n<br>\n\n### Revert | Rebase | Reset\n\nTrigger  | Command\n---------|----------\ngitrb. | `git rebase master`\ngitrs. | `git reset`\ngitrsh. | `git reset --hard`\ngitrv. | `git revert HEAD`\ngitrvne. | `git revert HEAD --no-edit`\n\n<br>\n\n### Tags\n\nTrigger  | Command\n---------|----------\ngittg. | `git tag`\ngittgd. | `git tag -d`\ngitmv. | `git mv file.ext dir_name`\n","packageYml":[{"name":"package.yml","content":"matches:\n\n  ### ----------------\n  ### Configurations\n  ### ----------------\n\n  # Git Init\n  - trigger: \"giti.\"\n    replace: \"git init\"  \n\n  # Git Clone\n  - trigger: \"gitcl.\"\n    replace: \"git clone \"\n\n  # Git Config Line 1\n  - trigger: \"gitconfigline1.\"\n    replace: \"git config --global core.autocrlf true\"\n\n  # Git Config Line 2\n  - trigger: \"gitconfigline2.\"\n    replace: \"git config --global core.safecrlf warn\"\n\n  # Git Config Email Global\n  - trigger: \"gitemailg.\"\n    replace: \"git config --global user.email \\\"$|$\\\"\"\n\n  # Git Config Email Local\n  - trigger: \"gitemaill.\"\n    replace: \"git config --local user.email \\\"$|$\\\"\"\n\n  # Git Config User Global\n  - trigger: \"gituserg.\"\n    replace: \"git config --global user.name \\\"$|$\\\"\"\n\n  # Git Config User Local\n  - trigger: \"gituserl.\"\n    replace: \"git config --local user.name \\\"$|$\\\"\"\n\n  \n  ### -------------\n  ### Push | Pull \n  ### -------------\n\n  # Git Status\n  - trigger: \"gits.\"\n    replace: \"git status\"\n\n\n  # Git Add\n  - trigger: \"gita.\"\n    replace: \"git add .\"\n\n  # Commit\n  - trigger: \"gitc.\"\n    replace: \"git commit -m \\\"$|$\\\"\"\n\n  # Amend Commit\n  - trigger: \"gitamc.\"\n    replace: \"git commit --amend -m \\\"$|$\\\"\"\n\n  # Amend Author\n  - trigger: \"gitama.\"\n    replace: \"git commit --amend --author=\\\"$|$User Name <email@email.com>\\\"\"\n\n\n  # Git Push\n  - trigger: \"gitp.\"\n    replace: \"git push origin \"\n\n  # Git Push Force\n  - trigger: \"gitpf.\"\n    replace: \"git push origin --force \"\n\n  # Git Pull \n  - trigger: \"gitu.\"\n    replace: \"git pull origin \"\n\n\n  # Remote Update\n  - trigger: \"gitru.\"\n    replace: \"git remote update\"\n    \n  # Remote Update\n  - trigger: \"gitfa.\"\n    replace: \"git fetch --all\"        \n\n\n  ### Stash\n\n  # Stash\n  - trigger: \"gitst.\"\n    replace: \"git stash\"\n\n  - trigger: \"gitstl.\"\n    replace: \"git stash list\"\n\n  - trigger: \"gitsts.\"\n    replace: \"git stash show\"\n\n  - trigger: \"gitstp.\"\n    replace: \"git stash pop\"\n\n  - trigger: \"gitstd.\"\n    replace: \"git stash drop\"\n\n  ### Branch\n\n  # Git Merge\n  - trigger: \"gitm.\"\n    replace: \"git merge \"\n\n  # Git Merge Branch\n  - trigger: \"gitmb.\"\n    replace: \"git merge \"\n\n  # Git Checkout\n  - trigger: \"gitchk.\"\n    replace: \"git checkout \"\n  \n  # New Branch\n  - trigger: \"gitchkb.\"\n    replace: \"git checkout -b \"\n\n  # New Branch\n  - trigger: \"gitnb.\"\n    replace: \"git checkout -b \"\n\n  # Lista Branchs\n  - trigger: \"gitb.\"\n    replace: \"git branch\"\n\n  # Lista Branchs Remote\n  - trigger: \"gitba.\"\n    replace: \"git branch -a\"\n    \n  # Delete Local Branch\n  - trigger: \"gitbd.\"\n    replace: \"git branch -d \"\n\n  # Delete Remote Branch\n  - trigger: \"gitbdr.\"\n    replace: \"git push origin --delete \"\n\n\n  ###-------\n  ### Log\n  ###-------\n\n\n  # Log\n  - trigger: \"gitl.\"\n    replace: \"git log\"\n\n  # Log Pretty\n  - trigger: \"gitlp.\"\n    replace: \"git log --pretty=oneline\"\n\n  # Log One Line\n  - trigger: \"gitlo.\"\n    replace: \"git log --oneline\"\n\n  # Log Graph Oneline \n  - trigger: \"gitlgo.\"\n    replace: \"git log --graph --oneline\"\n\n  # Log Log Pretty Formated\n  - trigger: \"gitlpf.\"\n    replace: \"git log --pretty=format:\\\"%h %ad | %s%d [%an]\\\" --graph --date=short\"\n\n\n  ###--------------------------\n  ### Revert | Rebase | Reset\n  ###--------------------------\n\n\n  # Git Rebase\n  - trigger: \"gitrb.\"\n    replace: \"git rebase master\"\n\n\n  # Git Reset\n  - trigger: \"gitrs.\"\n    replace: \"git reset\"\n\n  # Git Reset Hard\n  - trigger: \"gitrsh.\"\n    replace: \"git reset --hard \"\n\n\n\n  # Git Revert\n  - trigger: \"gitrv.\"\n    replace: \"git revert HEAD\"\n\n  # Git Revert - No Edit\n  - trigger: \"gitrvne.\"\n    replace: \"git revert HEAD --no-edit\"\n\n\n\n  # Git Tag\n  - trigger: \"gittg.\"\n    replace: \"git tag \"\n\n  # Git Tag Delete\n  - trigger: \"gittgd.\"\n    replace: \"git tag -d \"\n\n\n  # Git Move\n  - trigger: \"gitmv.\"\n    replace: \"git mv file.ext dir_name\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Espanso GIT\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Improve your git experience using this snippets triggers, become a faster developer at cli.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Triggers\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Configurations\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"giti.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git init\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitcl.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git clone\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitconfigline1.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --global core.autocrlf true\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitconfigline2.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --global core.safecrlf warn\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitemailg.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --global user.email \\\"\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitemaill.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --local user.email \\\"\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gituserg.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --global user.name \\\"\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gituserl.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git config --local user.name \\\"\\\"\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Push | Pull\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gits.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git status\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gita.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git add .\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitc.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git commit -m \\\"\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitamc.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git commit --amend -m \\\"\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitama.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git commit --amend --author=\\\"User Name <email@email.com>\\\"\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitp.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git push origin\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitpf.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git push origin --force \"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitu.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git pull origin\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitru.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git remote update\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitfa.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git fetch --all\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Stash\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitst.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git stash\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitstl.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git stash list\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitsts.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git stash show\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitstp.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git stash pop\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitstd.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git stash drop\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Branch\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitm.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git merge\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitmb.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git merge\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitchk.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git checkout\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitchkb.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git checkout -b\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitnb.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git checkout -b\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitb.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git branch\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitba.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git branch -a\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitbd.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git branch -d \"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitbdr.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git push origin --delete\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Log\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitl.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git log\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitlp.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git log --pretty=oneline\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitlo.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git log --oneline\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitlgo.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git log --graph --oneline\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitlpf.\"\n          }), _jsx(_components.td, {\n            children: \"`git log --pretty=format:\\\"%h %ad\"\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Revert | Rebase | Reset\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitrb.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git rebase master\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitrs.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git reset\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitrsh.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git reset --hard\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitrv.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git revert HEAD\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitrvne.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git revert HEAD --no-edit\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      children: \"Tags\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Trigger\"\n          }), _jsx(_components.th, {\n            children: \"Command\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gittg.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git tag\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gittgd.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git tag -d\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"gitmv.\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"git mv file.ext dir_name\"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"versions":["0.2.0","0.1.0"]},"__N_SSG":true}