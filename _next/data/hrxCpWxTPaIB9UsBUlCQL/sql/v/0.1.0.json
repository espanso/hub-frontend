{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"sql-0.1.0","name":"sql","author":"yanming zhang","description":"An package to get sql command code snippets","title":"sql Package","version":"0.1.0","tags":["sql","mysql","development"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/sql-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/sql-0.1.0-sha256.txt"},"manifest":{"author":"yanming zhang","description":"An package to get sql command code snippets","name":"sql","title":"sql Package","version":"0.1.0","homepage":{"_tag":"Some","value":"https://github.com/zhangymPerson/espanso-package-sql"},"tags":["sql","mysql","development"]},"readme":"---\npackage_name: \"sql\"\npackage_title: \"sql Package\"\npackage_desc: \"A package to get sql code snippets\"\npackage_version: \"0.1.0\"\npackage_author: \"yanming zhang\"\npackage_repo: \"https://github.com/zhangymPerson/espanso-package-sql\"\n---\n\nAn package to get sql command code snippets\n\nFor more information about espanso packages, read the [documentation](https://espanso.org/docs/).\n\n## Usage\n\nAvailable replacements:\n\n### DML(Data Manipulation Language)\n\n| replacement  | output                                                                      | description |\n| ------------ | --------------------------------------------------------------------------- | ----------- |\n| `:select:`   | `select * from table_name limit 100;`                                       |             |\n| `:where:`    | `select * from table_name where condition;`                                 |             |\n| `:count:`    | `select count(*) from table_name;`                                          |             |\n| `:limit:`    | `select * from table_name limit 100;`                                       |             |\n| `:groupby:`  | `select column from table_name group by column;`                            |             |\n| `:leftjoin:` | `select * from table_name left join table_name2 on condition;`              |             |\n| `:insert:`   | `insert into table_name (column1, column2) values (value1, value2);`        |             |\n| `:update:`   | `update table_name set column1 = value1, column2 = value2 where condition;` |             |\n| `:delete:`   | `delete from table_name where condition;`                                   |             |\n\n### DDL(Data Definition Language)\n\n- default use mysql ddl\n\n| replacement  |            output            | description |\n| :----------: | :--------------------------: | :---------: |\n|  `:create:`  |  `create table table_name;`  |    mysql    |\n|  `:alter:`   |  `alter table table_name;`   |    mysql    |\n|   `:drop:`   |   `drop table table_name;`   |             |\n| `:truncate:` | `truncate table table_name;` |             |\n\n### other\n\n#### mysql\n\n| replacement |       output       | description |\n| :---------: | :----------------: | :---------: |\n|   `:use:`   |  `use database;`   |             |\n| `:showdb:`  | `show databases;`  |             |\n| `:showtb:`  |   `show tables;`   |             |\n|  `:desc:`   | `desc table_name;` |             |\n","packageYml":[{"name":"package.yml","content":"name: sql\nparent: default\n\nmatches:\n  - trigger: \":select:\"\n    replace: \"select * from $|$ limit 100;\"\n\n  - trigger: \":where:\"\n    replace: \"select * from $|$ where condition;\"\n\n  - trigger: \":count:\"\n    replace: \"select count(*) from $|$;\"\n\n  - trigger: \":limit:\"\n    replace: \"select * from $|$ limit 100;\"\n\n  - trigger: \":groupby:\"\n    replace: \"select column from $|$ group by column;\"\n\n  - trigger: \":leftjoin:\"\n    replace: \"select * from $|$ left join table_name on condition;\"\n\n  - trigger: \":insert:\"\n    replace: \"insert into $|$ (column1, column2) values (value1, value2);\"\n\n  - trigger: \":update:\"\n    replace: \"update $|$ set column1 = value1, column2 = value2 where condition;\"\n\n  - trigger: \":delete:\"\n    replace: \"delete from $|$ where condition;\"\n\n  - trigger: \":create:\"\n    replace: |\n      create table if not exists $|$ (\n        id int auto_increment primary key,\n        create_time datetime not null default current_timestamp,\n        create_by varchar(255) not null,\n        update_time datetime default null on update current_timestamp,\n        update_by varchar(255) default null,\n        remark text\n      ) engine=innodb default charset=utf8mb4;\n\n  - trigger: \":alter:\"\n    replace: |\n      alter table $|$ add column column_name data_type;\n\n  - trigger: \":drop:\"\n    replace: \"drop table if exists $|$;\"\n\n  - trigger: \":truncate:\"\n    replace: \"truncate table $|$;\"\n\n  - trigger: \":use:\"\n    replace: \"use $|$;\"\n\n  - trigger: \":showdb:\"\n    replace: \"show databases;\"\n\n  - trigger: \":showtb:\"\n    replace: \"show tables;\"\n\n  - trigger: \":desc:\"\n    replace: \"desc $|$;\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      children: [\"package_name: \\\"sql\\\"\\npackage_title: \\\"sql Package\\\"\\npackage_desc: \\\"A package to get sql code snippets\\\"\\npackage_version: \\\"0.1.0\\\"\\npackage_author: \\\"yanming zhang\\\"\\npackage_repo: \\\"\", _jsx(_components.a, {\n        href: \"https://github.com/zhangymPerson/espanso-package-sql\",\n        children: \"https://github.com/zhangymPerson/espanso-package-sql\"\n      }), \"\\\"\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An package to get sql command code snippets\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more information about espanso packages, read the \", _jsx(_components.a, {\n        href: \"https://espanso.org/docs/\",\n        children: \"documentation\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Available replacements:\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"DML(Data Manipulation Language)\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"replacement\"\n          }), _jsx(_components.th, {\n            children: \"output\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":select:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select * from table_name limit 100;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":where:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select * from table_name where condition;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":count:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select count(*) from table_name;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":limit:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select * from table_name limit 100;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":groupby:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select column from table_name group by column;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":leftjoin:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"select * from table_name left join table_name2 on condition;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":insert:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"insert into table_name (column1, column2) values (value1, value2);\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":update:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"update table_name set column1 = value1, column2 = value2 where condition;\"\n            })\n          }), _jsx(_components.td, {})]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \":delete:\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"delete from table_name where condition;\"\n            })\n          }), _jsx(_components.td, {})]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"DDL(Data Definition Language)\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"default use mysql ddl\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"center\",\n            children: \"replacement\"\n          }), _jsx(_components.th, {\n            align: \"center\",\n            children: \"output\"\n          }), _jsx(_components.th, {\n            align: \"center\",\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":create:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"create table table_name;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: \"mysql\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":alter:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"alter table table_name;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: \"mysql\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":drop:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"drop table table_name;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":truncate:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"truncate table table_name;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"other\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"mysql\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"center\",\n            children: \"replacement\"\n          }), _jsx(_components.th, {\n            align: \"center\",\n            children: \"output\"\n          }), _jsx(_components.th, {\n            align: \"center\",\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":use:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"use database;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":showdb:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"show databases;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":showtb:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"show tables;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \":desc:\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: _jsx(_components.code, {\n              children: \"desc table_name;\"\n            })\n          }), _jsx(_components.td, {\n            align: \"center\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}