{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"single-steno-0.1.0","name":"single-steno","author":"reiwa","description":"Convert single characters into the most common English words","title":"Single Steno","version":"0.1.0","tags":["steno","common","character"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/single-steno-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/single-steno-0.1.0-sha256.txt"},"manifest":{"name":"single-steno","title":"Single Steno","description":"Convert single characters into the most common English words","version":"0.1.0","author":"reiwa","tags":["steno","common","character"],"homepage":{"_tag":"None"}},"readme":"# About\n**single-steno** is an Estenso package that converts single character inputs into the 26 most commonly used words in the English language.\n\n# Conversions\nb → because\nc → come\nd → could\ne → even\nf → for\ng → give\nh → have\ni → I\nj → just\nk → know\nl → like\nm → most\nn → and\nN → not\no → other\np → people\nq → question\nr → are\ns → some\nt → the\nu → under\nv → very\nw → with\nx → exactly\ny → you\nz → these\n\n# Notes\n- Since `a` is a word already, it has no conversion.\n- Lowercase `i` gets automatically converted into uppercase `I`, removing the need to push the shift key.\n- `n` is mapped to `and`. Since a sentence cannot start with `and` it can never be uppercase. This leaves us free to map uppercase `N` to `not`.\n","packageYml":[{"name":"package.yml","content":"matches:\n  - trigger: \"b\"\n    replace: \"because\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"c\"\n    replace: \"come\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"d\"\n    replace: \"could\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"e\"\n    replace: \"even\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"f\"\n    replace: \"for\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"g\"\n    replace: \"give\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"h\"\n    replace: \"have\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"i\"\n    replace: \"I\"\n    word: true\n\n  - trigger: \"j\"\n    replace: \"just\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"k\"\n    replace: \"know\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"l\"\n    replace: \"like\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"m\"\n    replace: \"most\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"n\"\n    replace: \"and\"\n    word: true\n\n  - trigger: \"N\"\n    replace: \"not\"\n    word: true\n\n  - trigger: \"o\"\n    replace: \"other\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"p\"\n    replace: \"people\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"q\"\n    replace: \"question\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"r\"\n    replace: \"are\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"s\"\n    replace: \"some\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"t\"\n    replace: \"the\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"u\"\n    replace: \"under\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"v\"\n    replace: \"very\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"w\"\n    replace: \"with\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"x\"\n    replace: \"exactly\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"y\"\n    replace: \"you\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n\n  - trigger: \"z\"\n    replace: \"these\"\n    propagate_case: true\n    uppercase_style: \"capitalize_words\"\n    word: true\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"About\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"single-steno\"\n      }), \" is an Estenso package that converts single character inputs into the 26 most commonly used words in the English language.\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Conversions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"b → because\\nc → come\\nd → could\\ne → even\\nf → for\\ng → give\\nh → have\\ni → I\\nj → just\\nk → know\\nl → like\\nm → most\\nn → and\\nN → not\\no → other\\np → people\\nq → question\\nr → are\\ns → some\\nt → the\\nu → under\\nv → very\\nw → with\\nx → exactly\\ny → you\\nz → these\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Notes\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Since \", _jsx(_components.code, {\n          children: \"a\"\n        }), \" is a word already, it has no conversion.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Lowercase \", _jsx(_components.code, {\n          children: \"i\"\n        }), \" gets automatically converted into uppercase \", _jsx(_components.code, {\n          children: \"I\"\n        }), \", removing the need to push the shift key.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"n\"\n        }), \" is mapped to \", _jsx(_components.code, {\n          children: \"and\"\n        }), \". Since a sentence cannot start with \", _jsx(_components.code, {\n          children: \"and\"\n        }), \" it can never be uppercase. This leaves us free to map uppercase \", _jsx(_components.code, {\n          children: \"N\"\n        }), \" to \", _jsx(_components.code, {\n          children: \"not\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.1.0"]},"__N_SSG":true}