{"pageProps":{"packageRepo":{"_tag":"Some","value":{"package":{"id":"italian-accents-0.1.0","name":"italian-accents","author":"Federico Terzi","description":"Include Italian accents substitutions to espanso.","title":"Italian Accents","version":"0.1.0","tags":["italian","languages","accents"],"archive_url":"https://github.com/espanso/hub/releases/latest/download/italian-accents-0.1.0.zip","archive_sha256_url":"https://github.com/espanso/hub/releases/latest/download/italian-accents-0.1.0-sha256.txt"},"manifest":{"author":"Federico Terzi","description":"Include Italian accents substitutions to espanso.","name":"italian-accents","title":"Italian Accents","version":"0.1.0","tags":["italian","languages","accents"],"homepage":{"_tag":"None"}},"readme":"A simple package to conveniently type italian with a non-italian keyboard layout.\nIt works by replacing keywords like `e'` with `è`. More details below.\n\n### Installation\n\nInstall the package with:\n\n```\nespanso install italian-accents\n```\n\n### Usage\n\nThis package replaces the following keywords with the associated accent while you're typing:\n\n#### Lowercase Accents\n\nKeyword | Replaced\n--- | ---\n`e'` | è\n`e//` | é\n`i'` | ì\n`a'` | à\n`o'` | ò\n`u'` | ù\n\n#### Uppercase Accents\n\nKeyword | Replaced\n--- | ---\n`E'` | È\n`E//` | É","packageYml":[{"name":"package.yml","content":"# Italian Accents package\n\nmatches:\n  - trigger: \"e'\"\n    replace: \"è\"\n  - trigger: \"e//\"\n    replace: \"é\"\n  - trigger: \"a'\"\n    replace: \"à\"\n  - trigger: \"i'\"\n    replace: \"ì\"\n  - trigger: \"o'\"\n    replace: \"ò\"\n  - trigger: \"u'\"\n    replace: \"ù\"\n\n  # Capital accented letters\n  - trigger: \"E'\"\n    replace: \"È\"\n  - trigger: \"E//\"\n    replace: \"É\"\n"}],"license":{"_tag":"None"},"serializedReadme":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h3: \"h3\",\n    pre: \"pre\",\n    h4: \"h4\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"A simple package to conveniently type italian with a non-italian keyboard layout.\\nIt works by replacing keywords like \", _jsx(_components.code, {\n        children: \"e'\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"è\"\n      }), \". More details below.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Install the package with:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"espanso install italian-accents\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This package replaces the following keywords with the associated accent while you're typing:\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Lowercase Accents\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Replaced\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"è\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"e//\"\n            })\n          }), _jsx(_components.td, {\n            children: \"é\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"i'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ì\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"a'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"à\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"o'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ò\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"u'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ù\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Uppercase Accents\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Keyword\"\n          }), _jsx(_components.th, {\n            children: \"Replaced\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"E'\"\n            })\n          }), _jsx(_components.td, {\n            children: \"È\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"E//\"\n            })\n          }), _jsx(_components.td, {\n            children: \"É\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"versions":["0.2.0","0.1.0"]},"__N_SSG":true}